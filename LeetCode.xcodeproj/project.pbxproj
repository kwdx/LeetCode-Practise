// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 50;
	objects = {

/* Begin PBXBuildFile section */
		89554F8326BD848F00FEDFF1 /* ListNode.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 89554F8226BD848F00FEDFF1 /* ListNode.cpp */; };
		89554FA526BEDED300FEDFF1 /* main.swift in Sources */ = {isa = PBXBuildFile; fileRef = 89554FA326BEDED300FEDFF1 /* main.swift */; };
		89AE6F7227146D580013A3FA /* 273.整数转换英文表示.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 89AE6F7127146D580013A3FA /* 273.整数转换英文表示.cpp */; };
		89C3FC1326CE988000C87257 /* UnionFind.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 89C3FC1126CE988000C87257 /* UnionFind.cpp */; };
		89C3FC4D26D1ED8600C87257 /* sorts.swift in Sources */ = {isa = PBXBuildFile; fileRef = 89C3FC4C26D1ED8600C87257 /* sorts.swift */; };
		89CC849B26C1759A009483EF /* TreeNode.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 89CC849926C1759A009483EF /* TreeNode.cpp */; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		89554F9826BEDE7100FEDFF1 /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
		89A6BEFD26BD8182007BDF6B /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		890044A1270E943000EC68D9 /* 434.字符串中的单词数.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "434.字符串中的单词数.cpp"; sourceTree = "<group>"; };
		8902686526BEEDB600156215 /* 416.分割等和子集.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "416.分割等和子集.cpp"; sourceTree = "<group>"; };
		8907625526D5398A00A93668 /* 83.删除排序链表中的重复元素.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "83.删除排序链表中的重复元素.cpp"; sourceTree = "<group>"; };
		8907625726D53D9B00A93668 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		8907625A26D54CEB00A93668 /* Google_1.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = Google_1.cpp; sourceTree = "<group>"; };
		8907625D26D9455F00A93668 /* 1480.一维数组的动态和.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1480.一维数组的动态和.cpp"; sourceTree = "<group>"; };
		8907626026DB28FE00A93668 /* 5854.学生分数的最小差值.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5854.学生分数的最小差值.cpp"; sourceTree = "<group>"; };
		8907626226DB2AE800A93668 /* 5855.找出数组中的第K大整数.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5855.找出数组中的第K大整数.cpp"; sourceTree = "<group>"; };
		8907626426DB2EDC00A93668 /* 5856.完成任务的最少工作时间段.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5856.完成任务的最少工作时间段.cpp"; sourceTree = "<group>"; };
		8907626626DB31FE00A93668 /* 5857.不同的好子序列数目.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5857.不同的好子序列数目.cpp"; sourceTree = "<group>"; };
		8907626C26DE873F00A93668 /* 121.买卖股票的最佳时机.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "121.买卖股票的最佳时机.cpp"; sourceTree = "<group>"; };
		8907626E26DE87FC00A93668 /* 122.买卖股票的最佳时机-ii.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "122.买卖股票的最佳时机-ii.cpp"; sourceTree = "<group>"; };
		8907627026DE896300A93668 /* 188.买卖股票的最佳时机-iv.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "188.买卖股票的最佳时机-iv.cpp"; sourceTree = "<group>"; };
		8907627226DE898E00A93668 /* 309.最佳买卖股票时机含冷冻期.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "309.最佳买卖股票时机含冷冻期.cpp"; sourceTree = "<group>"; };
		8907627426DE89B900A93668 /* 714.买卖股票的最佳时机含手续费.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "714.买卖股票的最佳时机含手续费.cpp"; sourceTree = "<group>"; };
		8907627626DE89EB00A93668 /* 509.斐波那契数.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "509.斐波那契数.cpp"; sourceTree = "<group>"; };
		8907627926E26FF200A93668 /* 面试题17.14.最小K个数.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "面试题17.14.最小K个数.cpp"; sourceTree = "<group>"; };
		8907627B26E2764A00A93668 /* 15.三数之和.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "15.三数之和.cpp"; sourceTree = "<group>"; };
		8907627E26E4638500A93668 /* 5863.统计特殊四元组.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5863.统计特殊四元组.cpp"; sourceTree = "<group>"; };
		8907628026E469B700A93668 /* 5864.游戏中弱角色的数量.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5864.游戏中弱角色的数量.cpp"; sourceTree = "<group>"; };
		8907628226E46F0F00A93668 /* 5865.访问完所有房间的第一天.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5865.访问完所有房间的第一天.cpp"; sourceTree = "<group>"; };
		8907628426E474D100A93668 /* 5866.数组的最大公因数排序.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5866.数组的最大公因数排序.cpp"; sourceTree = "<group>"; };
		8907628726E47A9800A93668 /* 470.用-rand-7-实现-rand-10.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "470.用-rand-7-实现-rand-10.cpp"; sourceTree = "<group>"; };
		8909653A26F77737005E17EA /* 650.只有两个键的键盘.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "650.只有两个键的键盘.cpp"; sourceTree = "<group>"; };
		8909E65427107658005ABD25 /* 187.重复的dna序列.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "187.重复的dna序列.cpp"; sourceTree = "<group>"; };
		890E21FB270AA8E80081372B /* 482.密钥格式化.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "482.密钥格式化.cpp"; sourceTree = "<group>"; };
		8919B45D26FAC9B600A9F0C2 /* 725.分隔链表.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "725.分隔链表.cpp"; sourceTree = "<group>"; };
		892B78BA270DD01D00923EA9 /* 414.第三大的数.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "414.第三大的数.cpp"; sourceTree = "<group>"; };
		894792CF27001A7100AC9055 /* 371.两整数之和.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "371.两整数之和.cpp"; sourceTree = "<group>"; };
		8951E5DC270CA00000E891F6 /* 284.顶端迭代器.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "284.顶端迭代器.cpp"; sourceTree = "<group>"; };
		895522652711D6E300133464 /* 352.将数据流变为多个不相交区间.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "352.将数据流变为多个不相交区间.cpp"; sourceTree = "<group>"; };
		89552267271296C200133464 /* 441.排列硬币.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "441.排列硬币.cpp"; sourceTree = "<group>"; };
		89554F7D26BD840B00FEDFF1 /* 92.反转链表-ii.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "92.反转链表-ii.cpp"; sourceTree = "<group>"; };
		89554F8026BD844100FEDFF1 /* ListNode.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = ListNode.h; sourceTree = "<group>"; };
		89554F8226BD848F00FEDFF1 /* ListNode.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ListNode.cpp; sourceTree = "<group>"; };
		89554F8426BD886800FEDFF1 /* 25.k-个一组翻转链表.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "25.k-个一组翻转链表.cpp"; sourceTree = "<group>"; };
		89554F8726BD92EE00FEDFF1 /* 234.回文链表.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "234.回文链表.cpp"; sourceTree = "<group>"; };
		89554F8D26BECFC200FEDFF1 /* 322.零钱兑换.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "322.零钱兑换.cpp"; sourceTree = "<group>"; };
		89554F9A26BEDE7100FEDFF1 /* Swift_ */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = Swift_; sourceTree = BUILT_PRODUCTS_DIR; };
		89554FA226BEDED300FEDFF1 /* 322.零钱兑换.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "322.零钱兑换.swift"; sourceTree = "<group>"; };
		89554FA326BEDED300FEDFF1 /* main.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = main.swift; sourceTree = "<group>"; };
		8966DE5826E7BBF400AEA606 /* 1221.分割平衡字符串.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1221.分割平衡字符串.cpp"; sourceTree = "<group>"; };
		8966DE5A26E90CAD00AEA606 /* 502.ipo.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 502.ipo.cpp; sourceTree = "<group>"; };
		8966DE5C26EA56C800AEA606 /* 68.文本左右对齐.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "68.文本左右对齐.cpp"; sourceTree = "<group>"; };
		8966DE5E26EBA5E900AEA606 /* 1894.找到需要补充粉笔的学生编号.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1894.找到需要补充粉笔的学生编号.cpp"; sourceTree = "<group>"; };
		8969847727072BB30070F99C /* 1436.旅行终点站.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1436.旅行终点站.cpp"; sourceTree = "<group>"; };
		89782A0E26F98B86000428A0 /* 58.最后一个单词的长度.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "58.最后一个单词的长度.cpp"; sourceTree = "<group>"; };
		8983473E270613D800B8946E /* 223.矩形面积.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "223.矩形面积.cpp"; sourceTree = "<group>"; };
		898379132701FFD200A1E293 /* 639.解码方法-ii.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "639.解码方法-ii.cpp"; sourceTree = "<group>"; };
		8989CF5527034A8A00DB244B /* 437.路径总和-iii.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "437.路径总和-iii.cpp"; sourceTree = "<group>"; };
		898F272226C8B8EE0077B621 /* 5832.构造元素不等于两相邻元素平均值的数组.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5832.构造元素不等于两相邻元素平均值的数组.cpp"; sourceTree = "<group>"; };
		898F272426C8BE780077B621 /* 5844.数组元素的最小非零乘积.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5844.数组元素的最小非零乘积.cpp"; sourceTree = "<group>"; };
		898F272626C8C2B30077B621 /* 5845.你能穿过矩阵的最后一天.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5845.你能穿过矩阵的最后一天.cpp"; sourceTree = "<group>"; };
		899FFB8E26F5E33800334BB1 /* 292.nim-游戏.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "292.nim-游戏.cpp"; sourceTree = "<group>"; };
		89A484372709E04200EEF031 /* 166.分数到小数.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "166.分数到小数.cpp"; sourceTree = "<group>"; };
		89A51CB326D3EB980013B3F2 /* 567.字符串的排列.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "567.字符串的排列.cpp"; sourceTree = "<group>"; };
		89A51CB526D3ED250013B3F2 /* 438.找到字符串中所有字母异位词.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "438.找到字符串中所有字母异位词.cpp"; sourceTree = "<group>"; };
		89A51CB726D3EE9A0013B3F2 /* 3.无重复字符的最长子串.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "3.无重复字符的最长子串.cpp"; sourceTree = "<group>"; };
		89A51CB926D3F29D0013B3F2 /* 380.o-1-时间插入、删除和获取随机元素.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "380.o-1-时间插入、删除和获取随机元素.cpp"; sourceTree = "<group>"; };
		89A51CBB26D3F3CE0013B3F2 /* 710.黑名单中的随机数.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "710.黑名单中的随机数.cpp"; sourceTree = "<group>"; };
		89A51CBD26D3F4560013B3F2 /* 316.去除重复字母.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "316.去除重复字母.cpp"; sourceTree = "<group>"; };
		89A51CBF26D3F5140013B3F2 /* 1081.不同字符的最小子序列.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1081.不同字符的最小子序列.cpp"; sourceTree = "<group>"; };
		89A51CC126D3F5C40013B3F2 /* 26.删除有序数组中的重复项.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "26.删除有序数组中的重复项.cpp"; sourceTree = "<group>"; };
		89A51CC526D3F69D0013B3F2 /* 27.移除元素.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "27.移除元素.cpp"; sourceTree = "<group>"; };
		89A51CC726D3F70C0013B3F2 /* 283.移动零.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "283.移动零.cpp"; sourceTree = "<group>"; };
		89A51CCA26D3F8540013B3F2 /* 1.两数之和.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1.两数之和.cpp"; sourceTree = "<group>"; };
		89A6BEFF26BD8182007BDF6B /* Cpp */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = Cpp; sourceTree = BUILT_PRODUCTS_DIR; };
		89AE6F7127146D580013A3FA /* 273.整数转换英文表示.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "273.整数转换英文表示.cpp"; sourceTree = "<group>"; };
		89BA3E9226E50245000B8F69 /* 1143.最长公共子序列.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1143.最长公共子序列.cpp"; sourceTree = "<group>"; };
		89C3FC0A26CAAED900C87257 /* 222.完全二叉树的节点个数.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "222.完全二叉树的节点个数.cpp"; sourceTree = "<group>"; };
		89C3FC0C26CAB26D00C87257 /* 236.二叉树的最近公共祖先.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "236.二叉树的最近公共祖先.cpp"; sourceTree = "<group>"; };
		89C3FC0E26CAB69A00C87257 /* 94.二叉树的中序遍历.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "94.二叉树的中序遍历.cpp"; sourceTree = "<group>"; };
		89C3FC1126CE988000C87257 /* UnionFind.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = UnionFind.cpp; sourceTree = "<group>"; };
		89C3FC1226CE988000C87257 /* UnionFind.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = UnionFind.h; sourceTree = "<group>"; };
		89C3FC1426CE9CF600C87257 /* 130.被围绕的区域.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "130.被围绕的区域.cpp"; sourceTree = "<group>"; };
		89C3FC1626CEA34000C87257 /* 990.等式方程的可满足性.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "990.等式方程的可满足性.cpp"; sourceTree = "<group>"; };
		89C3FC1926CEA5FC00C87257 /* 146.lru-缓存机制.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "146.lru-缓存机制.cpp"; sourceTree = "<group>"; };
		89C3FC1C26CFEA6300C87257 /* 895.最大频率栈.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "895.最大频率栈.cpp"; sourceTree = "<group>"; };
		89C3FC1E26CFEF1100C87257 /* 295.数据流的中位数.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "295.数据流的中位数.cpp"; sourceTree = "<group>"; };
		89C3FC2026CFF19D00C87257 /* 496.下一个更大元素-i.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "496.下一个更大元素-i.cpp"; sourceTree = "<group>"; };
		89C3FC2226CFF41300C87257 /* 503.下一个更大元素-ii.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "503.下一个更大元素-ii.cpp"; sourceTree = "<group>"; };
		89C3FC2426CFF58700C87257 /* 739.每日温度.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "739.每日温度.cpp"; sourceTree = "<group>"; };
		89C3FC2626CFF74E00C87257 /* 239.滑动窗口最大值.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "239.滑动窗口最大值.cpp"; sourceTree = "<group>"; };
		89C3FC2826CFFA1C00C87257 /* 225.用队列实现栈.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "225.用队列实现栈.cpp"; sourceTree = "<group>"; };
		89C3FC2A26CFFB8200C87257 /* 232.用栈实现队列.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "232.用栈实现队列.cpp"; sourceTree = "<group>"; };
		89C3FC2D26D0004700C87257 /* 870.优势洗牌.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "870.优势洗牌.cpp"; sourceTree = "<group>"; };
		89C3FC2F26D0C3B800C87257 /* 704.二分查找.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "704.二分查找.cpp"; sourceTree = "<group>"; };
		89C3FC3126D0CBD400C87257 /* 34.在排序数组中查找元素的第一个和最后一个位置.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "34.在排序数组中查找元素的第一个和最后一个位置.cpp"; sourceTree = "<group>"; };
		89C3FC3326D0EA7700C87257 /* 875.爱吃香蕉的珂珂.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "875.爱吃香蕉的珂珂.cpp"; sourceTree = "<group>"; };
		89C3FC3526D0F95300C87257 /* 1011.在-d-天内送达包裹的能力.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1011.在-d-天内送达包裹的能力.cpp"; sourceTree = "<group>"; };
		89C3FC3726D0FCD600C87257 /* 410.分割数组的最大值.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "410.分割数组的最大值.cpp"; sourceTree = "<group>"; };
		89C3FC3926D100D300C87257 /* 141.环形链表.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "141.环形链表.cpp"; sourceTree = "<group>"; };
		89C3FC3C26D1046900C87257 /* 142.环形链表-ii.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "142.环形链表-ii.cpp"; sourceTree = "<group>"; };
		89C3FC3E26D1062600C87257 /* 167.两数之和-ii-输入有序数组.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "167.两数之和-ii-输入有序数组.cpp"; sourceTree = "<group>"; };
		89C3FC4026D1077D00C87257 /* 344.反转字符串.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "344.反转字符串.cpp"; sourceTree = "<group>"; };
		89C3FC4226D1093F00C87257 /* 19.删除链表的倒数第-n-个结点.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "19.删除链表的倒数第-n-个结点.cpp"; sourceTree = "<group>"; };
		89C3FC4426D10D9A00C87257 /* 876.链表的中间结点.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "876.链表的中间结点.cpp"; sourceTree = "<group>"; };
		89C3FC4626D1508800C87257 /* 76.最小覆盖子串.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "76.最小覆盖子串.cpp"; sourceTree = "<group>"; };
		89C3FC4926D1EB1300C87257 /* 冒泡排序.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "冒泡排序.cpp"; sourceTree = "<group>"; };
		89C3FC4C26D1ED8600C87257 /* sorts.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = sorts.swift; sourceTree = "<group>"; };
		89C3FC4F26D1EF4C00C87257 /* 5850.找出数组的最大公约数.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5850.找出数组的最大公约数.cpp"; sourceTree = "<group>"; };
		89C3FC5126D1F1AD00C87257 /* 5851.找出不同的二进制字符串.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5851.找出不同的二进制字符串.cpp"; sourceTree = "<group>"; };
		89C3FC5326D1F64B00C87257 /* 5852.最小化目标值与所选元素的差.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5852.最小化目标值与所选元素的差.cpp"; sourceTree = "<group>"; };
		89C3FC5526D1F83100C87257 /* 5853.从子集的和还原数组.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5853.从子集的和还原数组.cpp"; sourceTree = "<group>"; };
		89CC848326BF79A1009483EF /* 5838.检查字符串是否为数组前缀.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5838.检查字符串是否为数组前缀.cpp"; sourceTree = "<group>"; };
		89CC848626BF7C6D009483EF /* 5839.移除石子使总数最小.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5839.移除石子使总数最小.cpp"; sourceTree = "<group>"; };
		89CC848826BF7E3B009483EF /* 5840.使字符串平衡的最小交换次数.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5840.使字符串平衡的最小交换次数.cpp"; sourceTree = "<group>"; };
		89CC848A26BF8125009483EF /* 5841.找出到每个位置为止最长的有效障碍赛跑路线.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5841.找出到每个位置为止最长的有效障碍赛跑路线.cpp"; sourceTree = "<group>"; };
		89CC849026C17453009483EF /* 70.爬楼梯.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "70.爬楼梯.cpp"; sourceTree = "<group>"; };
		89CC849326C174BE009483EF /* 5381_你可以工作的最大周数.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5381_你可以工作的最大周数.cpp"; sourceTree = "<group>"; };
		89CC849426C174BE009483EF /* 5830_三除数.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5830_三除数.cpp"; sourceTree = "<group>"; };
		89CC849526C174BE009483EF /* 5187_收集足够苹果的最小花园周长.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5187_收集足够苹果的最小花园周长.cpp"; sourceTree = "<group>"; };
		89CC849726C17562009483EF /* 654.最大二叉树.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "654.最大二叉树.cpp"; sourceTree = "<group>"; };
		89CC849926C1759A009483EF /* TreeNode.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = TreeNode.cpp; sourceTree = "<group>"; };
		89CC849A26C1759A009483EF /* TreeNode.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = TreeNode.h; sourceTree = "<group>"; };
		89CC849C26C17792009483EF /* 652.寻找重复的子树.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "652.寻找重复的子树.cpp"; sourceTree = "<group>"; };
		89CC849E26C17AEC009483EF /* 226.翻转二叉树.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "226.翻转二叉树.cpp"; sourceTree = "<group>"; };
		89CC84A026C17C76009483EF /* 116.填充每个节点的下一个右侧节点指针.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "116.填充每个节点的下一个右侧节点指针.cpp"; sourceTree = "<group>"; };
		89CC84A226C17EB2009483EF /* 114.二叉树展开为链表.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "114.二叉树展开为链表.cpp"; sourceTree = "<group>"; };
		89CC84A426C18174009483EF /* 105.从前序与中序遍历序列构造二叉树.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "105.从前序与中序遍历序列构造二叉树.cpp"; sourceTree = "<group>"; };
		89CC84A626C1843D009483EF /* 106.从中序与后序遍历序列构造二叉树.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "106.从中序与后序遍历序列构造二叉树.cpp"; sourceTree = "<group>"; };
		89CC84A926C2C3C5009483EF /* 98.验证二叉搜索树.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "98.验证二叉搜索树.cpp"; sourceTree = "<group>"; };
		89CC84AB26C2C692009483EF /* 230.二叉搜索树中第k小的元素.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "230.二叉搜索树中第k小的元素.cpp"; sourceTree = "<group>"; };
		89CC84AD26C2C94A009483EF /* 450.删除二叉搜索树中的节点.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "450.删除二叉搜索树中的节点.cpp"; sourceTree = "<group>"; };
		89CC84AF26C2D19B009483EF /* 538.把二叉搜索树转换为累加树.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "538.把二叉搜索树转换为累加树.cpp"; sourceTree = "<group>"; };
		89CC84B126C2D2C8009483EF /* 700.二叉搜索树中的搜索.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "700.二叉搜索树中的搜索.cpp"; sourceTree = "<group>"; };
		89CC84B326C2D3BF009483EF /* 701.二叉搜索树中的插入操作.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "701.二叉搜索树中的插入操作.cpp"; sourceTree = "<group>"; };
		89CC84B526C2D493009483EF /* 1038.把二叉搜索树转换为累加树.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1038.把二叉搜索树转换为累加树.cpp"; sourceTree = "<group>"; };
		89CC84B726C41A72009483EF /* 95.不同的二叉搜索树-ii.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "95.不同的二叉搜索树-ii.cpp"; sourceTree = "<group>"; };
		89CC84B926C41BF2009483EF /* 96.不同的二叉搜索树.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "96.不同的二叉搜索树.cpp"; sourceTree = "<group>"; };
		89CC84BB26C42537009483EF /* 797.所有可能的路径.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "797.所有可能的路径.cpp"; sourceTree = "<group>"; };
		89CC84BD26C427C8009483EF /* 1373.二叉搜索子树的最大键值和.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1373.二叉搜索子树的最大键值和.cpp"; sourceTree = "<group>"; };
		89CC84C026C8B46F009483EF /* 5843.作为子字符串出现在单词中的字符串数目.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5843.作为子字符串出现在单词中的字符串数目.cpp"; sourceTree = "<group>"; };
		89CEC83126FCC815000F9EC7 /* 326.3-的幂.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "326.3-的幂.cpp"; sourceTree = "<group>"; };
		89CEC83326FD805F000F9EC7 /* 430.扁平化多级双向链表.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "430.扁平化多级双向链表.cpp"; sourceTree = "<group>"; };
		89CF305326ECFAD90029D7B6 /* 600.不含连续-1-的非负整数.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "600.不含连续-1-的非负整数.cpp"; sourceTree = "<group>"; };
		89CF305526EE51560029D7B6 /* 678.有效的括号字符串.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "678.有效的括号字符串.cpp"; sourceTree = "<group>"; };
		89DE25C126F8D411005999E0 /* 673.最长递增子序列的个数.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "673.最长递增子序列的个数.cpp"; sourceTree = "<group>"; };
		89DEB28B26EF9355009A4894 /* 447.回旋镖的数量.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "447.回旋镖的数量.cpp"; sourceTree = "<group>"; };
		89DEB28D26F0ED37009A4894 /* 524.通过删除字母匹配到字典里最长单词.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "524.通过删除字母匹配到字典里最长单词.cpp"; sourceTree = "<group>"; };
		89DEB29026F248FC009A4894 /* 162.寻找峰值.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "162.寻找峰值.cpp"; sourceTree = "<group>"; };
		89DEB29226F363EB009A4894 /* 212.单词搜索-ii.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "212.单词搜索-ii.cpp"; sourceTree = "<group>"; };
		89EBA18126C965F700D291DD /* 341.扁平化嵌套列表迭代器.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "341.扁平化嵌套列表迭代器.cpp"; sourceTree = "<group>"; };
		89EEFF6F26C95BF90010CFA7 /* 297.二叉树的序列化与反序列化.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "297.二叉树的序列化与反序列化.cpp"; sourceTree = "<group>"; };
		89FE578626F4EEC700863E33 /* 36.有效的数独.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "36.有效的数独.cpp"; sourceTree = "<group>"; };
		89FFD6682704A1A800AD1B8D /* 517.超级洗衣机.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "517.超级洗衣机.cpp"; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		89554F9726BEDE7100FEDFF1 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		89A6BEFC26BD8182007BDF6B /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		8902686426BEDF7000156215 /* 动态规划 */ = {
			isa = PBXGroup;
			children = (
				89554FA226BEDED300FEDFF1 /* 322.零钱兑换.swift */,
			);
			name = "动态规划";
			sourceTree = "<group>";
		};
		8907625926D54CCB00A93668 /* 额外的算法题 */ = {
			isa = PBXGroup;
			children = (
				8907625A26D54CEB00A93668 /* Google_1.cpp */,
				8907627926E26FF200A93668 /* 面试题17.14.最小K个数.cpp */,
			);
			name = "额外的算法题";
			sourceTree = "<group>";
		};
		8907625F26DB28EC00A93668 /* 第256场 */ = {
			isa = PBXGroup;
			children = (
				8907626026DB28FE00A93668 /* 5854.学生分数的最小差值.cpp */,
				8907626226DB2AE800A93668 /* 5855.找出数组中的第K大整数.cpp */,
				8907626426DB2EDC00A93668 /* 5856.完成任务的最少工作时间段.cpp */,
				8907626626DB31FE00A93668 /* 5857.不同的好子序列数目.cpp */,
			);
			name = "第256场";
			sourceTree = "<group>";
		};
		8907627D26E4636300A93668 /* 第257场 */ = {
			isa = PBXGroup;
			children = (
				8907627E26E4638500A93668 /* 5863.统计特殊四元组.cpp */,
				8907628026E469B700A93668 /* 5864.游戏中弱角色的数量.cpp */,
				8907628226E46F0F00A93668 /* 5865.访问完所有房间的第一天.cpp */,
				8907628426E474D100A93668 /* 5866.数组的最大公因数排序.cpp */,
			);
			name = "第257场";
			sourceTree = "<group>";
		};
		8907628626E47A8300A93668 /* Unknown */ = {
			isa = PBXGroup;
			children = (
				899FFB8E26F5E33800334BB1 /* 292.nim-游戏.cpp */,
				894792CF27001A7100AC9055 /* 371.两整数之和.cpp */,
				8907628726E47A9800A93668 /* 470.用-rand-7-实现-rand-10.cpp */,
				890E21FB270AA8E80081372B /* 482.密钥格式化.cpp */,
				8969847727072BB30070F99C /* 1436.旅行终点站.cpp */,
				8966DE5E26EBA5E900AEA606 /* 1894.找到需要补充粉笔的学生编号.cpp */,
			);
			name = Unknown;
			sourceTree = "<group>";
		};
		89554F8A26BECF7C00FEDFF1 /* 链表 */ = {
			isa = PBXGroup;
			children = (
				89C3FC4226D1093F00C87257 /* 19.删除链表的倒数第-n-个结点.cpp */,
				89554F8426BD886800FEDFF1 /* 25.k-个一组翻转链表.cpp */,
				8907625526D5398A00A93668 /* 83.删除排序链表中的重复元素.cpp */,
				89554F7D26BD840B00FEDFF1 /* 92.反转链表-ii.cpp */,
				89C3FC3926D100D300C87257 /* 141.环形链表.cpp */,
				89C3FC3C26D1046900C87257 /* 142.环形链表-ii.cpp */,
				89554F8726BD92EE00FEDFF1 /* 234.回文链表.cpp */,
				89CEC83326FD805F000F9EC7 /* 430.扁平化多级双向链表.cpp */,
				8919B45D26FAC9B600A9F0C2 /* 725.分隔链表.cpp */,
				89C3FC4426D10D9A00C87257 /* 876.链表的中间结点.cpp */,
				89554F8026BD844100FEDFF1 /* ListNode.h */,
				89554F8226BD848F00FEDFF1 /* ListNode.cpp */,
			);
			name = "链表";
			sourceTree = "<group>";
		};
		89554F8C26BECFB600FEDFF1 /* 动态规划 */ = {
			isa = PBXGroup;
			children = (
				89CC849026C17453009483EF /* 70.爬楼梯.cpp */,
				8907626C26DE873F00A93668 /* 121.买卖股票的最佳时机.cpp */,
				8907626E26DE87FC00A93668 /* 122.买卖股票的最佳时机-ii.cpp */,
				8907627026DE896300A93668 /* 188.买卖股票的最佳时机-iv.cpp */,
				8907627226DE898E00A93668 /* 309.最佳买卖股票时机含冷冻期.cpp */,
				89554F8D26BECFC200FEDFF1 /* 322.零钱兑换.cpp */,
				8902686526BEEDB600156215 /* 416.分割等和子集.cpp */,
				8907627626DE89EB00A93668 /* 509.斐波那契数.cpp */,
				89FFD6682704A1A800AD1B8D /* 517.超级洗衣机.cpp */,
				89CF305326ECFAD90029D7B6 /* 600.不含连续-1-的非负整数.cpp */,
				898379132701FFD200A1E293 /* 639.解码方法-ii.cpp */,
				8909653A26F77737005E17EA /* 650.只有两个键的键盘.cpp */,
				89DE25C126F8D411005999E0 /* 673.最长递增子序列的个数.cpp */,
				8907627426DE89B900A93668 /* 714.买卖股票的最佳时机含手续费.cpp */,
				89BA3E9226E50245000B8F69 /* 1143.最长公共子序列.cpp */,
			);
			name = "动态规划";
			sourceTree = "<group>";
		};
		89554FA126BEDED300FEDFF1 /* Swift */ = {
			isa = PBXGroup;
			children = (
				89C3FC4B26D1ED6600C87257 /* 排序 */,
				8902686426BEDF7000156215 /* 动态规划 */,
				89554FA326BEDED300FEDFF1 /* main.swift */,
			);
			path = Swift;
			sourceTree = "<group>";
		};
		89782A0D26F98B77000428A0 /* 字符串 */ = {
			isa = PBXGroup;
			children = (
				89782A0E26F98B86000428A0 /* 58.最后一个单词的长度.cpp */,
				89AE6F7127146D580013A3FA /* 273.整数转换英文表示.cpp */,
				890044A1270E943000EC68D9 /* 434.字符串中的单词数.cpp */,
			);
			name = "字符串";
			sourceTree = "<group>";
		};
		89A6BF0026BD8182007BDF6B /* Cpp */ = {
			isa = PBXGroup;
			children = (
				89CEC83026FCC7F6000F9EC7 /* math */,
				89782A0D26F98B77000428A0 /* 字符串 */,
				89DEB28A26EF9343009A4894 /* 哈希 */,
				8907628626E47A8300A93668 /* Unknown */,
				8907625926D54CCB00A93668 /* 额外的算法题 */,
				89C3FC4826D1EAE800C87257 /* 排序 */,
				89C3FC2C26D0003700C87257 /* 数组 */,
				89C3FC1B26CFEA5400C87257 /* 堆栈 */,
				89C3FC1826CEA5E500C87257 /* 设计 */,
				89C3FC1026CE984600C87257 /* 图 */,
				89CC849626C17557009483EF /* 二叉树 */,
				89CC848226BF7976009483EF /* 周赛 */,
				89554F8C26BECFB600FEDFF1 /* 动态规划 */,
				89554F8A26BECF7C00FEDFF1 /* 链表 */,
				8907625726D53D9B00A93668 /* main.cpp */,
			);
			path = Cpp;
			sourceTree = "<group>";
		};
		89C3FC1026CE984600C87257 /* 图 */ = {
			isa = PBXGroup;
			children = (
				89C3FC1226CE988000C87257 /* UnionFind.h */,
				89C3FC1126CE988000C87257 /* UnionFind.cpp */,
				89C3FC1426CE9CF600C87257 /* 130.被围绕的区域.cpp */,
				89C3FC1626CEA34000C87257 /* 990.等式方程的可满足性.cpp */,
			);
			name = "图";
			sourceTree = "<group>";
		};
		89C3FC1826CEA5E500C87257 /* 设计 */ = {
			isa = PBXGroup;
			children = (
				89C3FC1926CEA5FC00C87257 /* 146.lru-缓存机制.cpp */,
				8951E5DC270CA00000E891F6 /* 284.顶端迭代器.cpp */,
			);
			name = "设计";
			sourceTree = "<group>";
		};
		89C3FC1B26CFEA5400C87257 /* 堆栈 */ = {
			isa = PBXGroup;
			children = (
				8966DE5C26EA56C800AEA606 /* 68.文本左右对齐.cpp */,
				89C3FC2826CFFA1C00C87257 /* 225.用队列实现栈.cpp */,
				89C3FC2A26CFFB8200C87257 /* 232.用栈实现队列.cpp */,
				89C3FC2626CFF74E00C87257 /* 239.滑动窗口最大值.cpp */,
				89C3FC1E26CFEF1100C87257 /* 295.数据流的中位数.cpp */,
				89C3FC2026CFF19D00C87257 /* 496.下一个更大元素-i.cpp */,
				8966DE5A26E90CAD00AEA606 /* 502.ipo.cpp */,
				89C3FC2226CFF41300C87257 /* 503.下一个更大元素-ii.cpp */,
				89C3FC2426CFF58700C87257 /* 739.每日温度.cpp */,
				89C3FC1C26CFEA6300C87257 /* 895.最大频率栈.cpp */,
			);
			name = "堆栈";
			sourceTree = "<group>";
		};
		89C3FC2C26D0003700C87257 /* 数组 */ = {
			isa = PBXGroup;
			children = (
				89A51CCA26D3F8540013B3F2 /* 1.两数之和.cpp */,
				89A51CB726D3EE9A0013B3F2 /* 3.无重复字符的最长子串.cpp */,
				8907627B26E2764A00A93668 /* 15.三数之和.cpp */,
				89A51CC126D3F5C40013B3F2 /* 26.删除有序数组中的重复项.cpp */,
				89A51CC526D3F69D0013B3F2 /* 27.移除元素.cpp */,
				89C3FC3126D0CBD400C87257 /* 34.在排序数组中查找元素的第一个和最后一个位置.cpp */,
				89C3FC4626D1508800C87257 /* 76.最小覆盖子串.cpp */,
				89DEB29026F248FC009A4894 /* 162.寻找峰值.cpp */,
				89C3FC3E26D1062600C87257 /* 167.两数之和-ii-输入有序数组.cpp */,
				89DEB29226F363EB009A4894 /* 212.单词搜索-ii.cpp */,
				89A51CC726D3F70C0013B3F2 /* 283.移动零.cpp */,
				89A51CBD26D3F4560013B3F2 /* 316.去除重复字母.cpp */,
				89C3FC4026D1077D00C87257 /* 344.反转字符串.cpp */,
				89A51CB926D3F29D0013B3F2 /* 380.o-1-时间插入、删除和获取随机元素.cpp */,
				89C3FC3726D0FCD600C87257 /* 410.分割数组的最大值.cpp */,
				892B78BA270DD01D00923EA9 /* 414.第三大的数.cpp */,
				89A51CB526D3ED250013B3F2 /* 438.找到字符串中所有字母异位词.cpp */,
				89DEB28D26F0ED37009A4894 /* 524.通过删除字母匹配到字典里最长单词.cpp */,
				89A51CB326D3EB980013B3F2 /* 567.字符串的排列.cpp */,
				89CF305526EE51560029D7B6 /* 678.有效的括号字符串.cpp */,
				89C3FC2F26D0C3B800C87257 /* 704.二分查找.cpp */,
				89A51CBB26D3F3CE0013B3F2 /* 710.黑名单中的随机数.cpp */,
				89C3FC2D26D0004700C87257 /* 870.优势洗牌.cpp */,
				89C3FC3326D0EA7700C87257 /* 875.爱吃香蕉的珂珂.cpp */,
				89C3FC3526D0F95300C87257 /* 1011.在-d-天内送达包裹的能力.cpp */,
				89A51CBF26D3F5140013B3F2 /* 1081.不同字符的最小子序列.cpp */,
				8966DE5826E7BBF400AEA606 /* 1221.分割平衡字符串.cpp */,
				8907625D26D9455F00A93668 /* 1480.一维数组的动态和.cpp */,
			);
			name = "数组";
			sourceTree = "<group>";
		};
		89C3FC4826D1EAE800C87257 /* 排序 */ = {
			isa = PBXGroup;
			children = (
				89C3FC4926D1EB1300C87257 /* 冒泡排序.cpp */,
			);
			name = "排序";
			sourceTree = "<group>";
		};
		89C3FC4B26D1ED6600C87257 /* 排序 */ = {
			isa = PBXGroup;
			children = (
				89C3FC4C26D1ED8600C87257 /* sorts.swift */,
			);
			name = "排序";
			sourceTree = "<group>";
		};
		89C3FC4E26D1EF2E00C87257 /* 第255场 */ = {
			isa = PBXGroup;
			children = (
				89C3FC4F26D1EF4C00C87257 /* 5850.找出数组的最大公约数.cpp */,
				89C3FC5126D1F1AD00C87257 /* 5851.找出不同的二进制字符串.cpp */,
				89C3FC5326D1F64B00C87257 /* 5852.最小化目标值与所选元素的差.cpp */,
				89C3FC5526D1F83100C87257 /* 5853.从子集的和还原数组.cpp */,
			);
			name = "第255场";
			sourceTree = "<group>";
		};
		89CC848226BF7976009483EF /* 周赛 */ = {
			isa = PBXGroup;
			children = (
				8907627D26E4636300A93668 /* 第257场 */,
				8907625F26DB28EC00A93668 /* 第256场 */,
				89C3FC4E26D1EF2E00C87257 /* 第255场 */,
				89CC84BF26C8B443009483EF /* 第254场 */,
				89CC849226C174B1009483EF /* 第252场 */,
				89CC848526BF79AD009483EF /* 第253场 */,
			);
			name = "周赛";
			sourceTree = "<group>";
		};
		89CC848526BF79AD009483EF /* 第253场 */ = {
			isa = PBXGroup;
			children = (
				89CC848326BF79A1009483EF /* 5838.检查字符串是否为数组前缀.cpp */,
				89CC848626BF7C6D009483EF /* 5839.移除石子使总数最小.cpp */,
				89CC848826BF7E3B009483EF /* 5840.使字符串平衡的最小交换次数.cpp */,
				89CC848A26BF8125009483EF /* 5841.找出到每个位置为止最长的有效障碍赛跑路线.cpp */,
			);
			name = "第253场";
			sourceTree = "<group>";
		};
		89CC849226C174B1009483EF /* 第252场 */ = {
			isa = PBXGroup;
			children = (
				89CC849526C174BE009483EF /* 5187_收集足够苹果的最小花园周长.cpp */,
				89CC849326C174BE009483EF /* 5381_你可以工作的最大周数.cpp */,
				89CC849426C174BE009483EF /* 5830_三除数.cpp */,
			);
			name = "第252场";
			sourceTree = "<group>";
		};
		89CC849626C17557009483EF /* 二叉树 */ = {
			isa = PBXGroup;
			children = (
				89CC849A26C1759A009483EF /* TreeNode.h */,
				89CC849926C1759A009483EF /* TreeNode.cpp */,
				89C3FC0E26CAB69A00C87257 /* 94.二叉树的中序遍历.cpp */,
				89CC84B726C41A72009483EF /* 95.不同的二叉搜索树-ii.cpp */,
				89CC84B926C41BF2009483EF /* 96.不同的二叉搜索树.cpp */,
				89CC84A926C2C3C5009483EF /* 98.验证二叉搜索树.cpp */,
				89CC84A426C18174009483EF /* 105.从前序与中序遍历序列构造二叉树.cpp */,
				89CC84A626C1843D009483EF /* 106.从中序与后序遍历序列构造二叉树.cpp */,
				89CC84A226C17EB2009483EF /* 114.二叉树展开为链表.cpp */,
				89CC84A026C17C76009483EF /* 116.填充每个节点的下一个右侧节点指针.cpp */,
				89C3FC0A26CAAED900C87257 /* 222.完全二叉树的节点个数.cpp */,
				89CC849E26C17AEC009483EF /* 226.翻转二叉树.cpp */,
				89CC84AB26C2C692009483EF /* 230.二叉搜索树中第k小的元素.cpp */,
				89C3FC0C26CAB26D00C87257 /* 236.二叉树的最近公共祖先.cpp */,
				89EEFF6F26C95BF90010CFA7 /* 297.二叉树的序列化与反序列化.cpp */,
				89EBA18126C965F700D291DD /* 341.扁平化嵌套列表迭代器.cpp */,
				8989CF5527034A8A00DB244B /* 437.路径总和-iii.cpp */,
				89CC84AD26C2C94A009483EF /* 450.删除二叉搜索树中的节点.cpp */,
				89CC84AF26C2D19B009483EF /* 538.把二叉搜索树转换为累加树.cpp */,
				89CC849C26C17792009483EF /* 652.寻找重复的子树.cpp */,
				89CC849726C17562009483EF /* 654.最大二叉树.cpp */,
				89CC84B126C2D2C8009483EF /* 700.二叉搜索树中的搜索.cpp */,
				89CC84B326C2D3BF009483EF /* 701.二叉搜索树中的插入操作.cpp */,
				89CC84BB26C42537009483EF /* 797.所有可能的路径.cpp */,
				89CC84B526C2D493009483EF /* 1038.把二叉搜索树转换为累加树.cpp */,
				89CC84BD26C427C8009483EF /* 1373.二叉搜索子树的最大键值和.cpp */,
			);
			name = "二叉树";
			sourceTree = "<group>";
		};
		89CC84BF26C8B443009483EF /* 第254场 */ = {
			isa = PBXGroup;
			children = (
				89CC84C026C8B46F009483EF /* 5843.作为子字符串出现在单词中的字符串数目.cpp */,
				898F272226C8B8EE0077B621 /* 5832.构造元素不等于两相邻元素平均值的数组.cpp */,
				898F272426C8BE780077B621 /* 5844.数组元素的最小非零乘积.cpp */,
				898F272626C8C2B30077B621 /* 5845.你能穿过矩阵的最后一天.cpp */,
			);
			name = "第254场";
			sourceTree = "<group>";
		};
		89CEC83026FCC7F6000F9EC7 /* math */ = {
			isa = PBXGroup;
			children = (
				89A484372709E04200EEF031 /* 166.分数到小数.cpp */,
				8983473E270613D800B8946E /* 223.矩形面积.cpp */,
				89CEC83126FCC815000F9EC7 /* 326.3-的幂.cpp */,
				89552267271296C200133464 /* 441.排列硬币.cpp */,
			);
			name = math;
			sourceTree = "<group>";
		};
		89DEB28A26EF9343009A4894 /* 哈希 */ = {
			isa = PBXGroup;
			children = (
				89FE578626F4EEC700863E33 /* 36.有效的数独.cpp */,
				8909E65427107658005ABD25 /* 187.重复的dna序列.cpp */,
				895522652711D6E300133464 /* 352.将数据流变为多个不相交区间.cpp */,
				89DEB28B26EF9355009A4894 /* 447.回旋镖的数量.cpp */,
			);
			name = "哈希";
			sourceTree = "<group>";
		};
		89F5C9F226B63F3000ABF72F = {
			isa = PBXGroup;
			children = (
				89554FA126BEDED300FEDFF1 /* Swift */,
				89A6BF0026BD8182007BDF6B /* Cpp */,
				89F5C9FC26B63F3000ABF72F /* Products */,
			);
			sourceTree = "<group>";
		};
		89F5C9FC26B63F3000ABF72F /* Products */ = {
			isa = PBXGroup;
			children = (
				89A6BEFF26BD8182007BDF6B /* Cpp */,
				89554F9A26BEDE7100FEDFF1 /* Swift_ */,
			);
			name = Products;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		89554F9926BEDE7100FEDFF1 /* Swift_ */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 89554F9E26BEDE7100FEDFF1 /* Build configuration list for PBXNativeTarget "Swift_" */;
			buildPhases = (
				89554F9626BEDE7100FEDFF1 /* Sources */,
				89554F9726BEDE7100FEDFF1 /* Frameworks */,
				89554F9826BEDE7100FEDFF1 /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Swift_;
			productName = SwiftCode;
			productReference = 89554F9A26BEDE7100FEDFF1 /* Swift_ */;
			productType = "com.apple.product-type.tool";
		};
		89A6BEFE26BD8182007BDF6B /* Cpp */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 89A6BF0526BD8182007BDF6B /* Build configuration list for PBXNativeTarget "Cpp" */;
			buildPhases = (
				89A6BEFB26BD8182007BDF6B /* Sources */,
				89A6BEFC26BD8182007BDF6B /* Frameworks */,
				89A6BEFD26BD8182007BDF6B /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Cpp;
			productName = Cpp;
			productReference = 89A6BEFF26BD8182007BDF6B /* Cpp */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		89F5C9F326B63F3000ABF72F /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftUpdateCheck = 1250;
				LastUpgradeCheck = 1250;
				TargetAttributes = {
					89554F9926BEDE7100FEDFF1 = {
						CreatedOnToolsVersion = 12.5.1;
					};
					89A6BEFE26BD8182007BDF6B = {
						CreatedOnToolsVersion = 12.5.1;
					};
				};
			};
			buildConfigurationList = 89F5C9F626B63F3000ABF72F /* Build configuration list for PBXProject "LeetCode" */;
			compatibilityVersion = "Xcode 9.3";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 89F5C9F226B63F3000ABF72F;
			productRefGroup = 89F5C9FC26B63F3000ABF72F /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				89A6BEFE26BD8182007BDF6B /* Cpp */,
				89554F9926BEDE7100FEDFF1 /* Swift_ */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		89554F9626BEDE7100FEDFF1 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				89C3FC4D26D1ED8600C87257 /* sorts.swift in Sources */,
				89554FA526BEDED300FEDFF1 /* main.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		89A6BEFB26BD8182007BDF6B /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				89C3FC1326CE988000C87257 /* UnionFind.cpp in Sources */,
				89CC849B26C1759A009483EF /* TreeNode.cpp in Sources */,
				89554F8326BD848F00FEDFF1 /* ListNode.cpp in Sources */,
				89AE6F7227146D580013A3FA /* 273.整数转换英文表示.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		89554F9F26BEDE7100FEDFF1 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		89554FA026BEDE7100FEDFF1 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_COMPILATION_MODE = wholemodule;
				SWIFT_OPTIMIZATION_LEVEL = "-O";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
		89A6BF0326BD8182007BDF6B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Debug;
		};
		89A6BF0426BD8182007BDF6B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Release;
		};
		89F5CA0026B63F3000ABF72F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 11.3;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
			};
			name = Debug;
		};
		89F5CA0126B63F3000ABF72F /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 11.3;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				SDKROOT = macosx;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		89554F9E26BEDE7100FEDFF1 /* Build configuration list for PBXNativeTarget "Swift_" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				89554F9F26BEDE7100FEDFF1 /* Debug */,
				89554FA026BEDE7100FEDFF1 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		89A6BF0526BD8182007BDF6B /* Build configuration list for PBXNativeTarget "Cpp" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				89A6BF0326BD8182007BDF6B /* Debug */,
				89A6BF0426BD8182007BDF6B /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		89F5C9F626B63F3000ABF72F /* Build configuration list for PBXProject "LeetCode" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				89F5CA0026B63F3000ABF72F /* Debug */,
				89F5CA0126B63F3000ABF72F /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 89F5C9F326B63F3000ABF72F /* Project object */;
}
