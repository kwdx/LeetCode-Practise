// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 50;
	objects = {

/* Begin PBXBuildFile section */
		89554F8326BD848F00FEDFF1 /* ListNode.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 89554F8226BD848F00FEDFF1 /* ListNode.cpp */; };
		896BABCD2792F1420099C360 /* 1716.计算力扣银行的钱.swift in Sources */ = {isa = PBXBuildFile; fileRef = 896BABCC2792F1420099C360 /* 1716.计算力扣银行的钱.swift */; };
		896BABCF2792F15C0099C360 /* 1716.计算力扣银行的钱.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 896BABCE2792F15C0099C360 /* 1716.计算力扣银行的钱.cpp */; };
		89886F4B272C5E47003A626D /* main.swift in Sources */ = {isa = PBXBuildFile; fileRef = 89554FA326BEDED300FEDFF1 /* main.swift */; };
		89886F63272CE20B003A626D /* ListNode.swift in Sources */ = {isa = PBXBuildFile; fileRef = 89886F62272CE20B003A626D /* ListNode.swift */; };
		899A76D82747F72E006DA530 /* TreeNode.swift in Sources */ = {isa = PBXBuildFile; fileRef = 899A76D72747F72E006DA530 /* TreeNode.swift */; };
		89C3FC1326CE988000C87257 /* UnionFind.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 89C3FC1126CE988000C87257 /* UnionFind.cpp */; };
		89C84276274A09F400A73FAB /* Node.swift in Sources */ = {isa = PBXBuildFile; fileRef = 89C84275274A09F400A73FAB /* Node.swift */; };
		89CC849B26C1759A009483EF /* TreeNode.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 89CC849926C1759A009483EF /* TreeNode.cpp */; };
		89D65EE12768D97200B855E3 /* PriorityQueue.swift in Sources */ = {isa = PBXBuildFile; fileRef = 89D65EE02768D97200B855E3 /* PriorityQueue.swift */; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		89554F9826BEDE7100FEDFF1 /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
		89A6BEFD26BD8182007BDF6B /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		890044A1270E943000EC68D9 /* 434.字符串中的单词数.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "434.字符串中的单词数.cpp"; sourceTree = "<group>"; };
		890126E72736386300440D63 /* 268.丢失的数字.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "268.丢失的数字.cpp"; sourceTree = "<group>"; };
		890126E92736395600440D63 /* 268.丢失的数字.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "268.丢失的数字.swift"; sourceTree = "<group>"; };
		8902686526BEEDB600156215 /* 416.分割等和子集.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "416.分割等和子集.cpp"; sourceTree = "<group>"; };
		8907514E276EFCC7009BA671 /* 997.找到小镇的法官.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "997.找到小镇的法官.cpp"; sourceTree = "<group>"; };
		89075150276EFD7B009BA671 /* 997.找到小镇的法官.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "997.找到小镇的法官.swift"; sourceTree = "<group>"; };
		89075152276F673C009BA671 /* 1610.可见点的最大数目.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1610.可见点的最大数目.cpp"; sourceTree = "<group>"; };
		89075154276F674C009BA671 /* 1610.可见点的最大数目.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "1610.可见点的最大数目.swift"; sourceTree = "<group>"; };
		8907625526D5398A00A93668 /* 83.删除排序链表中的重复元素.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "83.删除排序链表中的重复元素.cpp"; sourceTree = "<group>"; };
		8907625726D53D9B00A93668 /* main.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = main.cpp; sourceTree = "<group>"; };
		8907625A26D54CEB00A93668 /* Google_1.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = Google_1.cpp; sourceTree = "<group>"; };
		8907625D26D9455F00A93668 /* 1480.一维数组的动态和.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1480.一维数组的动态和.cpp"; sourceTree = "<group>"; };
		8907626026DB28FE00A93668 /* 5854.学生分数的最小差值.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5854.学生分数的最小差值.cpp"; sourceTree = "<group>"; };
		8907626226DB2AE800A93668 /* 5855.找出数组中的第K大整数.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5855.找出数组中的第K大整数.cpp"; sourceTree = "<group>"; };
		8907626426DB2EDC00A93668 /* 5856.完成任务的最少工作时间段.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5856.完成任务的最少工作时间段.cpp"; sourceTree = "<group>"; };
		8907626626DB31FE00A93668 /* 5857.不同的好子序列数目.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5857.不同的好子序列数目.cpp"; sourceTree = "<group>"; };
		8907626C26DE873F00A93668 /* 121.买卖股票的最佳时机.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "121.买卖股票的最佳时机.cpp"; sourceTree = "<group>"; };
		8907626E26DE87FC00A93668 /* 122.买卖股票的最佳时机-ii.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "122.买卖股票的最佳时机-ii.cpp"; sourceTree = "<group>"; };
		8907627026DE896300A93668 /* 188.买卖股票的最佳时机-iv.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "188.买卖股票的最佳时机-iv.cpp"; sourceTree = "<group>"; };
		8907627226DE898E00A93668 /* 309.最佳买卖股票时机含冷冻期.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "309.最佳买卖股票时机含冷冻期.cpp"; sourceTree = "<group>"; };
		8907627426DE89B900A93668 /* 714.买卖股票的最佳时机含手续费.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "714.买卖股票的最佳时机含手续费.cpp"; sourceTree = "<group>"; };
		8907627626DE89EB00A93668 /* 509.斐波那契数.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "509.斐波那契数.cpp"; sourceTree = "<group>"; };
		8907627926E26FF200A93668 /* 面试题17.14.最小K个数.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "面试题17.14.最小K个数.cpp"; sourceTree = "<group>"; };
		8907627B26E2764A00A93668 /* 15.三数之和.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "15.三数之和.cpp"; sourceTree = "<group>"; };
		8907627E26E4638500A93668 /* 5863.统计特殊四元组.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5863.统计特殊四元组.cpp"; sourceTree = "<group>"; };
		8907628026E469B700A93668 /* 5864.游戏中弱角色的数量.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5864.游戏中弱角色的数量.cpp"; sourceTree = "<group>"; };
		8907628226E46F0F00A93668 /* 5865.访问完所有房间的第一天.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5865.访问完所有房间的第一天.cpp"; sourceTree = "<group>"; };
		8907628426E474D100A93668 /* 5866.数组的最大公因数排序.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5866.数组的最大公因数排序.cpp"; sourceTree = "<group>"; };
		8907628726E47A9800A93668 /* 470.用-rand-7-实现-rand-10.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "470.用-rand-7-实现-rand-10.cpp"; sourceTree = "<group>"; };
		8909653A26F77737005E17EA /* 650.只有两个键的键盘.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "650.只有两个键的键盘.cpp"; sourceTree = "<group>"; };
		8909E65427107658005ABD25 /* 187.重复的dna序列.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "187.重复的dna序列.cpp"; sourceTree = "<group>"; };
		890E21FB270AA8E80081372B /* 482.密钥格式化.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "482.密钥格式化.cpp"; sourceTree = "<group>"; };
		890E883D2740C9CB0073633B /* 677.键值映射.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "677.键值映射.cpp"; sourceTree = "<group>"; };
		890E883F2740CB8C0073633B /* 677.键值映射.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "677.键值映射.swift"; sourceTree = "<group>"; };
		891095852731767C00981C0D /* 237.删除链表中的节点.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "237.删除链表中的节点.swift"; sourceTree = "<group>"; };
		891095872734200C00981C0D /* 407.接雨水-ii.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "407.接雨水-ii.cpp"; sourceTree = "<group>"; };
		89109589273420B400981C0D /* 367.有效的完全平方数.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "367.有效的完全平方数.cpp"; sourceTree = "<group>"; };
		8910958B27342C7B00981C0D /* 367.有效的完全平方数.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "367.有效的完全平方数.swift"; sourceTree = "<group>"; };
		8910958D2735799500981C0D /* 1218.最长定差子序列.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "1218.最长定差子序列.swift"; sourceTree = "<group>"; };
		8910958F273579C800981C0D /* 1218.最长定差子序列.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1218.最长定差子序列.cpp"; sourceTree = "<group>"; };
		8919B45D26FAC9B600A9F0C2 /* 725.分隔链表.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "725.分隔链表.cpp"; sourceTree = "<group>"; };
		891C5A60273F6FDB0047E46E /* 520.检测大写字母.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "520.检测大写字母.cpp"; sourceTree = "<group>"; };
		891C5A62273F718D0047E46E /* 520.检测大写字母.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "520.检测大写字母.swift"; sourceTree = "<group>"; };
		892396DF27624BBD0041A3B9 /* 794.有效的井字游戏.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "794.有效的井字游戏.swift"; sourceTree = "<group>"; };
		892396E127624BD40041A3B9 /* 794.有效的井字游戏.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "794.有效的井字游戏.cpp"; sourceTree = "<group>"; };
		89239D0F2715D0D200489E2B /* 29.两数相除.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "29.两数相除.cpp"; sourceTree = "<group>"; };
		89239D112717130400489E2B /* 412.fizz-buzz.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "412.fizz-buzz.cpp"; sourceTree = "<group>"; };
		89239D16271859C000489E2B /* 剑指 Offer II 069.山峰数组的顶部.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "剑指 Offer II 069.山峰数组的顶部.cpp"; sourceTree = "<group>"; };
		89239D182719D2E200489E2B /* 38.外观数列.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "38.外观数列.cpp"; sourceTree = "<group>"; };
		89239D1A271A6D8F00489E2B /* 282.给表达式添加运算符.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "282.给表达式添加运算符.cpp"; sourceTree = "<group>"; };
		892B78BA270DD01D00923EA9 /* 414.第三大的数.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "414.第三大的数.cpp"; sourceTree = "<group>"; };
		892EC6A0275C993A00CD0593 /* 372.超级次方.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "372.超级次方.cpp"; sourceTree = "<group>"; };
		892EC6A2275C994D00CD0593 /* 372.超级次方.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "372.超级次方.swift"; sourceTree = "<group>"; };
		8939CD7A277F5733009F0CEE /* 507.完美数.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "507.完美数.cpp"; sourceTree = "<group>"; };
		8939CD7C277F587E009F0CEE /* 507.完美数.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "507.完美数.swift"; sourceTree = "<group>"; };
		8939CD7E277F5995009F0CEE /* 472.连接词.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "472.连接词.cpp"; sourceTree = "<group>"; };
		8939CD7F277F5995009F0CEE /* 1296.划分数组为连续数字的集合.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "1296.划分数组为连续数字的集合.cpp"; sourceTree = "<group>"; };
		8939CD80277F5995009F0CEE /* 1995.统计特殊四元组.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "1995.统计特殊四元组.cpp"; sourceTree = "<group>"; };
		8939CD81277F5995009F0CEE /* 846.一手顺子.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "846.一手顺子.cpp"; sourceTree = "<group>"; };
		8939CD82277F5995009F0CEE /* 825.适龄的朋友.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "825.适龄的朋友.cpp"; sourceTree = "<group>"; };
		8939CD83277F59A0009F0CEE /* 846.一手顺子.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "846.一手顺子.swift"; sourceTree = "<group>"; };
		8939CD84277F59A0009F0CEE /* 472.连接词.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "472.连接词.swift"; sourceTree = "<group>"; };
		8939CD85277F59A0009F0CEE /* 1296.划分数组为连续数字的集合.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1296.划分数组为连续数字的集合.swift"; sourceTree = "<group>"; };
		8939CD86277F59A0009F0CEE /* 825.适龄的朋友.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "825.适龄的朋友.swift"; sourceTree = "<group>"; };
		8939CD87277F59A0009F0CEE /* 1995.统计特殊四元组.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1995.统计特殊四元组.swift"; sourceTree = "<group>"; };
		893E11FD272AEC7300EAC6FD /* 869.重新排序得到-2-的幂.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "869.重新排序得到-2-的幂.cpp"; sourceTree = "<group>"; };
		893E122A272C3DDA00EAC6FD /* 240.搜索二维矩阵-ii.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "240.搜索二维矩阵-ii.cpp"; sourceTree = "<group>"; };
		893E122C272C3DFB00EAC6FD /* 301.删除无效的括号.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "301.删除无效的括号.cpp"; sourceTree = "<group>"; };
		893E122E272C4BCC00EAC6FD /* 335.路径交叉.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "335.路径交叉.cpp"; sourceTree = "<group>"; };
		893E1231272C51AD00EAC6FD /* 198.打家劫舍.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "198.打家劫舍.swift"; sourceTree = "<group>"; };
		893E1234272C554D00EAC6FD /* 215.数组中的第k个最大元素.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "215.数组中的第k个最大元素.swift"; sourceTree = "<group>"; };
		894792CF27001A7100AC9055 /* 371.两整数之和.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "371.两整数之和.cpp"; sourceTree = "<group>"; };
		8951E5DC270CA00000E891F6 /* 284.顶端迭代器.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "284.顶端迭代器.cpp"; sourceTree = "<group>"; };
		895522652711D6E300133464 /* 352.将数据流变为多个不相交区间.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "352.将数据流变为多个不相交区间.cpp"; sourceTree = "<group>"; };
		89552267271296C200133464 /* 441.排列硬币.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "441.排列硬币.cpp"; sourceTree = "<group>"; };
		89554F7D26BD840B00FEDFF1 /* 92.反转链表-ii.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "92.反转链表-ii.cpp"; sourceTree = "<group>"; };
		89554F8026BD844100FEDFF1 /* ListNode.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = ListNode.h; sourceTree = "<group>"; };
		89554F8226BD848F00FEDFF1 /* ListNode.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = ListNode.cpp; sourceTree = "<group>"; };
		89554F8426BD886800FEDFF1 /* 25.k-个一组翻转链表.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "25.k-个一组翻转链表.cpp"; sourceTree = "<group>"; };
		89554F8726BD92EE00FEDFF1 /* 234.回文链表.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "234.回文链表.cpp"; sourceTree = "<group>"; };
		89554F8D26BECFC200FEDFF1 /* 322.零钱兑换.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "322.零钱兑换.cpp"; sourceTree = "<group>"; };
		89554F9A26BEDE7100FEDFF1 /* Swift_ */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = Swift_; sourceTree = BUILT_PRODUCTS_DIR; };
		89554FA226BEDED300FEDFF1 /* 322.零钱兑换.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "322.零钱兑换.swift"; sourceTree = "<group>"; };
		89554FA326BEDED300FEDFF1 /* main.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = main.swift; sourceTree = "<group>"; };
		8955A7F42783456F00AB2F8D /* 1185.一周中的第几天.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "1185.一周中的第几天.swift"; sourceTree = "<group>"; };
		8955A7F62783457F00AB2F8D /* 1185.一周中的第几天.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1185.一周中的第几天.cpp"; sourceTree = "<group>"; };
		8956A90827242C820006474A /* 492.构造矩形.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "492.构造矩形.cpp"; sourceTree = "<group>"; };
		8956A90A27242E8E0006474A /* 453.最小操作次数使数组元素相等-1.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "453.最小操作次数使数组元素相等-1.cpp"; sourceTree = "<group>"; };
		8956A90B27242E8E0006474A /* 476.数字的补数.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "476.数字的补数.cpp"; sourceTree = "<group>"; };
		8956A90C27242E8E0006474A /* 211.添加与搜索单词-数据结构设计-1.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "211.添加与搜索单词-数据结构设计-1.cpp"; sourceTree = "<group>"; };
		8956A90D27242E8E0006474A /* 229.求众数-ii-1.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "229.求众数-ii-1.cpp"; sourceTree = "<group>"; };
		8956A90E27242E8E0006474A /* 66.加一-1.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "66.加一-1.cpp"; sourceTree = "<group>"; };
		8957EDB527302F1600A67CCA /* 575.分糖果.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "575.分糖果.cpp"; sourceTree = "<group>"; };
		895F9E3F2764310C00E2DF08 /* 911.在线选举.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "911.在线选举.cpp"; sourceTree = "<group>"; };
		895F9E412764311D00E2DF08 /* 911.在线选举.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "911.在线选举.swift"; sourceTree = "<group>"; };
		8966DE5826E7BBF400AEA606 /* 1221.分割平衡字符串.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1221.分割平衡字符串.cpp"; sourceTree = "<group>"; };
		8966DE5A26E90CAD00AEA606 /* 502.ipo.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = 502.ipo.cpp; sourceTree = "<group>"; };
		8966DE5C26EA56C800AEA606 /* 68.文本左右对齐.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "68.文本左右对齐.cpp"; sourceTree = "<group>"; };
		8966DE5E26EBA5E900AEA606 /* 1894.找到需要补充粉笔的学生编号.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1894.找到需要补充粉笔的学生编号.cpp"; sourceTree = "<group>"; };
		8969847727072BB30070F99C /* 1436.旅行终点站.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1436.旅行终点站.cpp"; sourceTree = "<group>"; };
		896BABC82791C9A60099C360 /* 373.查找和最小的k对数字.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "373.查找和最小的k对数字.cpp"; sourceTree = "<group>"; };
		896BABCA2791C9CD0099C360 /* 373.查找和最小的k对数字.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "373.查找和最小的k对数字.swift"; sourceTree = "<group>"; };
		896BABCC2792F1420099C360 /* 1716.计算力扣银行的钱.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "1716.计算力扣银行的钱.swift"; sourceTree = "<group>"; };
		896BABCE2792F15C0099C360 /* 1716.计算力扣银行的钱.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1716.计算力扣银行的钱.cpp"; sourceTree = "<group>"; };
		89723779275A655900EBC5C5 /* 400.第-n-位数字.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "400.第-n-位数字.cpp"; sourceTree = "<group>"; };
		8972377A275A655900EBC5C5 /* 506.相对名次.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "506.相对名次.cpp"; sourceTree = "<group>"; };
		8972377B275A655900EBC5C5 /* 1005.k-次取反后最大化的数组和.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1005.k-次取反后最大化的数组和.cpp"; sourceTree = "<group>"; };
		8972377C275A655900EBC5C5 /* 1446.连续字符.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1446.连续字符.cpp"; sourceTree = "<group>"; };
		8972377D275A655900EBC5C5 /* 786.第-k-个最小的素数分数.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "786.第-k-个最小的素数分数.cpp"; sourceTree = "<group>"; };
		89723783275A656800EBC5C5 /* 506.相对名次.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "506.相对名次.swift"; sourceTree = "<group>"; };
		89723784275A656900EBC5C5 /* 400.第-n-位数字.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "400.第-n-位数字.swift"; sourceTree = "<group>"; };
		89723785275A656900EBC5C5 /* 786.第-k-个最小的素数分数.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "786.第-k-个最小的素数分数.swift"; sourceTree = "<group>"; };
		89723786275A656900EBC5C5 /* 1005.k-次取反后最大化的数组和.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "1005.k-次取反后最大化的数组和.swift"; sourceTree = "<group>"; };
		89723787275A656900EBC5C5 /* 1446.连续字符.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "1446.连续字符.swift"; sourceTree = "<group>"; };
		897355182776209C0034C87A /* 1154.一年中的第几天.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1154.一年中的第几天.swift"; sourceTree = "<group>"; };
		897355192776209C0034C87A /* 475.供暖器.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "475.供暖器.swift"; sourceTree = "<group>"; };
		8973551A2776209C0034C87A /* 1705.吃苹果的最大数目.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "1705.吃苹果的最大数目.swift"; sourceTree = "<group>"; };
		8973551B2776209C0034C87A /* 686.重复叠加字符串匹配.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "686.重复叠加字符串匹配.swift"; sourceTree = "<group>"; };
		8973551C277620B20034C87A /* 1044.最长重复子串.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "1044.最长重复子串.cpp"; sourceTree = "<group>"; };
		8973551D277620B20034C87A /* 686.重复叠加字符串匹配.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "686.重复叠加字符串匹配.cpp"; sourceTree = "<group>"; };
		8973551E277620B20034C87A /* 1705.吃苹果的最大数目.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "1705.吃苹果的最大数目.cpp"; sourceTree = "<group>"; };
		8973551F277620B20034C87A /* 1154.一年中的第几天.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "1154.一年中的第几天.cpp"; sourceTree = "<group>"; };
		89735520277620B20034C87A /* 475.供暖器.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "475.供暖器.cpp"; sourceTree = "<group>"; };
		8973552327776F7E0034C87A /* 1609.奇偶树.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "1609.奇偶树.swift"; sourceTree = "<group>"; };
		8973552527776F8C0034C87A /* 1609.奇偶树.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1609.奇偶树.cpp"; sourceTree = "<group>"; };
		89766317273AD13A00507E1F /* 488.祖玛游戏.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "488.祖玛游戏.cpp"; sourceTree = "<group>"; };
		89766319273C19D500507E1F /* 495.提莫攻击.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "495.提莫攻击.cpp"; sourceTree = "<group>"; };
		8976631B273C1B2600507E1F /* 495.提莫攻击.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "495.提莫攻击.swift"; sourceTree = "<group>"; };
		8976631E273D698000507E1F /* 629.k个逆序对数组.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "629.k个逆序对数组.cpp"; sourceTree = "<group>"; };
		89766320273D6A5600507E1F /* 629.k个逆序对数组.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "629.k个逆序对数组.swift"; sourceTree = "<group>"; };
		89782A0E26F98B86000428A0 /* 58.最后一个单词的长度.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "58.最后一个单词的长度.cpp"; sourceTree = "<group>"; };
		8983473E270613D800B8946E /* 223.矩形面积.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "223.矩形面积.cpp"; sourceTree = "<group>"; };
		898379132701FFD200A1E293 /* 639.解码方法-ii.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "639.解码方法-ii.cpp"; sourceTree = "<group>"; };
		89886F45272C5A7E003A626D /* 347.前-k-个高频元素.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "347.前-k-个高频元素.swift"; sourceTree = "<group>"; };
		89886F47272C5DA1003A626D /* 451.根据字符出现频率排序.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "451.根据字符出现频率排序.swift"; sourceTree = "<group>"; };
		89886F49272C5E42003A626D /* 36.有效的数独.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "36.有效的数独.swift"; sourceTree = "<group>"; };
		89886F4C272C5EF5003A626D /* 349.两个数组的交集.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "349.两个数组的交集.swift"; sourceTree = "<group>"; };
		89886F4F272CDC20003A626D /* 88.合并两个有序数组.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "88.合并两个有序数组.swift"; sourceTree = "<group>"; };
		89886F51272CDCE6003A626D /* 509.斐波那契数.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "509.斐波那契数.swift"; sourceTree = "<group>"; };
		89886F54272CDE00003A626D /* 20.有效的括号.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "20.有效的括号.swift"; sourceTree = "<group>"; };
		89886F56272CDF2D003A626D /* 150.逆波兰表达式求值.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "150.逆波兰表达式求值.swift"; sourceTree = "<group>"; };
		89886F58272CDFA2003A626D /* 224.基本计算器.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "224.基本计算器.swift"; sourceTree = "<group>"; };
		89886F5B272CE03E003A626D /* 225.用队列实现栈.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "225.用队列实现栈.swift"; sourceTree = "<group>"; };
		89886F5D272CE104003A626D /* 232.用栈实现队列.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "232.用栈实现队列.swift"; sourceTree = "<group>"; };
		89886F5F272CE174003A626D /* 856.括号的分数.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "856.括号的分数.swift"; sourceTree = "<group>"; };
		89886F62272CE20B003A626D /* ListNode.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = ListNode.swift; sourceTree = "<group>"; };
		89886F64272CE221003A626D /* 21.合并两个有序链表.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "21.合并两个有序链表.swift"; sourceTree = "<group>"; };
		89886F67272CE4B9003A626D /* 23.合并k个升序链表.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "23.合并k个升序链表.swift"; sourceTree = "<group>"; };
		89886F69272CE7A7003A626D /* 260.只出现一次的数字-iii.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "260.只出现一次的数字-iii.cpp"; sourceTree = "<group>"; };
		89886F6B272CF392003A626D /* 260.只出现一次的数字-iii.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "260.只出现一次的数字-iii.swift"; sourceTree = "<group>"; };
		89886F6D272EC283003A626D /* 500.键盘行.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "500.键盘行.cpp"; sourceTree = "<group>"; };
		89886F6F272EC8B2003A626D /* 500.键盘行.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "500.键盘行.swift"; sourceTree = "<group>"; };
		8988F1E92763997B00CDBAA9 /* 748.最短补全词.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "748.最短补全词.swift"; sourceTree = "<group>"; };
		8988F1EB2763999200CDBAA9 /* 748.最短补全词.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "748.最短补全词.cpp"; sourceTree = "<group>"; };
		8989CF5527034A8A00DB244B /* 437.路径总和-iii.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "437.路径总和-iii.cpp"; sourceTree = "<group>"; };
		898F272226C8B8EE0077B621 /* 5832.构造元素不等于两相邻元素平均值的数组.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5832.构造元素不等于两相邻元素平均值的数组.cpp"; sourceTree = "<group>"; };
		898F272426C8BE780077B621 /* 5844.数组元素的最小非零乘积.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5844.数组元素的最小非零乘积.cpp"; sourceTree = "<group>"; };
		898F272626C8C2B30077B621 /* 5845.你能穿过矩阵的最后一天.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5845.你能穿过矩阵的最后一天.cpp"; sourceTree = "<group>"; };
		898F44A22737DAE00051A08C /* 598.范围求和-ii.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "598.范围求和-ii.cpp"; sourceTree = "<group>"; };
		898F44A42737DBDC0051A08C /* 598.范围求和-ii.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "598.范围求和-ii.swift"; sourceTree = "<group>"; };
		898F4E6927815B4100A89BD8 /* 390.消除游戏.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "390.消除游戏.cpp"; sourceTree = "<group>"; };
		898F4E6B27815C3E00A89BD8 /* 390.消除游戏.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "390.消除游戏.swift"; sourceTree = "<group>"; };
		8992BF50275B2675007E107F /* 383.赎金信.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "383.赎金信.swift"; sourceTree = "<group>"; };
		8992BF52275B2693007E107F /* 383.赎金信.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "383.赎金信.cpp"; sourceTree = "<group>"; };
		89943B38275FAF80002F1171 /* 1034.边框着色.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "1034.边框着色.swift"; sourceTree = "<group>"; };
		89943B3A275FAF87002F1171 /* 1034.边框着色.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1034.边框着色.cpp"; sourceTree = "<group>"; };
		89943B3F2760F480002F1171 /* 689.三个无重叠子数组的最大和.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "689.三个无重叠子数组的最大和.cpp"; sourceTree = "<group>"; };
		89943B412760F48C002F1171 /* 689.三个无重叠子数组的最大和.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "689.三个无重叠子数组的最大和.swift"; sourceTree = "<group>"; };
		8995D89C27303094001A499C /* 575.分糖果.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "575.分糖果.swift"; sourceTree = "<group>"; };
		899A76C32747F65F006DA530 /* 319.灯泡开关.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "319.灯泡开关.cpp"; sourceTree = "<group>"; };
		899A76C52747F67C006DA530 /* 391.完美矩形.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "391.完美矩形.cpp"; sourceTree = "<group>"; };
		899A76C72747F692006DA530 /* 318.最大单词长度乘积.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "318.最大单词长度乘积.cpp"; sourceTree = "<group>"; };
		899A76CA2747F6AD006DA530 /* 563.二叉树的坡度.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "563.二叉树的坡度.cpp"; sourceTree = "<group>"; };
		899A76CC2747F6BD006DA530 /* 397.整数替换.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "397.整数替换.cpp"; sourceTree = "<group>"; };
		899A76CF2747F6E2006DA530 /* 319.灯泡开关.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "319.灯泡开关.swift"; sourceTree = "<group>"; };
		899A76D12747F6F6006DA530 /* 391.完美矩形-1.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "391.完美矩形-1.swift"; sourceTree = "<group>"; };
		899A76D32747F703006DA530 /* 318.最大单词长度乘积-2.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "318.最大单词长度乘积-2.swift"; sourceTree = "<group>"; };
		899A76D52747F710006DA530 /* 563.二叉树的坡度-2.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "563.二叉树的坡度-2.swift"; sourceTree = "<group>"; };
		899A76D72747F72E006DA530 /* TreeNode.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = TreeNode.swift; sourceTree = "<group>"; };
		899A76D92747F753006DA530 /* 397.整数替换.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "397.整数替换.swift"; sourceTree = "<group>"; };
		899EF52527395D9500CCB02F /* 299.猜数字游戏.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "299.猜数字游戏.cpp"; sourceTree = "<group>"; };
		899EF52727395E5700CCB02F /* 299.猜数字游戏.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "299.猜数字游戏.swift"; sourceTree = "<group>"; };
		899FFB8E26F5E33800334BB1 /* 292.nim-游戏.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "292.nim-游戏.cpp"; sourceTree = "<group>"; };
		89A38F0D275E4942007FED61 /* 1816.截断句子.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "1816.截断句子.swift"; sourceTree = "<group>"; };
		89A38F0F275E4948007FED61 /* 1816.截断句子.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1816.截断句子.cpp"; sourceTree = "<group>"; };
		89A484372709E04200EEF031 /* 166.分数到小数.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "166.分数到小数.cpp"; sourceTree = "<group>"; };
		89A51CB326D3EB980013B3F2 /* 567.字符串的排列.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "567.字符串的排列.cpp"; sourceTree = "<group>"; };
		89A51CB526D3ED250013B3F2 /* 438.找到字符串中所有字母异位词.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "438.找到字符串中所有字母异位词.cpp"; sourceTree = "<group>"; };
		89A51CB726D3EE9A0013B3F2 /* 3.无重复字符的最长子串.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "3.无重复字符的最长子串.cpp"; sourceTree = "<group>"; };
		89A51CB926D3F29D0013B3F2 /* 380.o-1-时间插入、删除和获取随机元素.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "380.o-1-时间插入、删除和获取随机元素.cpp"; sourceTree = "<group>"; };
		89A51CBB26D3F3CE0013B3F2 /* 710.黑名单中的随机数.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "710.黑名单中的随机数.cpp"; sourceTree = "<group>"; };
		89A51CBD26D3F4560013B3F2 /* 316.去除重复字母.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "316.去除重复字母.cpp"; sourceTree = "<group>"; };
		89A51CBF26D3F5140013B3F2 /* 1081.不同字符的最小子序列.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1081.不同字符的最小子序列.cpp"; sourceTree = "<group>"; };
		89A51CC126D3F5C40013B3F2 /* 26.删除有序数组中的重复项.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "26.删除有序数组中的重复项.cpp"; sourceTree = "<group>"; };
		89A51CC526D3F69D0013B3F2 /* 27.移除元素.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "27.移除元素.cpp"; sourceTree = "<group>"; };
		89A51CC726D3F70C0013B3F2 /* 283.移动零.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "283.移动零.cpp"; sourceTree = "<group>"; };
		89A51CCA26D3F8540013B3F2 /* 1.两数之和.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1.两数之和.cpp"; sourceTree = "<group>"; };
		89A6BEFF26BD8182007BDF6B /* Cpp */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = Cpp; sourceTree = BUILT_PRODUCTS_DIR; };
		89A779E8276DD2C700B7CDA9 /* 419.甲板上的战舰.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "419.甲板上的战舰.cpp"; sourceTree = "<group>"; };
		89A779EA276DD35B00B7CDA9 /* 419.甲板上的战舰.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "419.甲板上的战舰.swift"; sourceTree = "<group>"; };
		89AE6F7127146D580013A3FA /* 273.整数转换英文表示.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "273.整数转换英文表示.cpp"; sourceTree = "<group>"; };
		89AE789B2751CDF000598666 /* 519.随机翻转矩阵.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "519.随机翻转矩阵.swift"; sourceTree = "<group>"; };
		89AE789D2751E44700598666 /* 519.随机翻转矩阵.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "519.随机翻转矩阵.cpp"; sourceTree = "<group>"; };
		89AE789F2751E79400598666 /* 384.打乱数组.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "384.打乱数组.cpp"; sourceTree = "<group>"; };
		89AE78A02751E7A100598666 /* 423.从英文中重建数字.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "423.从英文中重建数字.cpp"; sourceTree = "<group>"; };
		89AE78A12751E7AE00598666 /* 458.可怜的小猪.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "458.可怜的小猪.cpp"; sourceTree = "<group>"; };
		89AE78A22751E7BF00598666 /* 859.亲密字符串.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "859.亲密字符串.cpp"; sourceTree = "<group>"; };
		89AE78A32751E7D600598666 /* 700.二叉搜索树中的搜索.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "700.二叉搜索树中的搜索.swift"; sourceTree = "<group>"; };
		89AE78A42751E7D600598666 /* 859.亲密字符串.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "859.亲密字符串.swift"; sourceTree = "<group>"; };
		89AE78A52751E7D600598666 /* 384.打乱数组.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "384.打乱数组.swift"; sourceTree = "<group>"; };
		89AE78A62751E7D600598666 /* 423.从英文中重建数字.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "423.从英文中重建数字.swift"; sourceTree = "<group>"; };
		89AE78A72751E7D600598666 /* 458.可怜的小猪.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "458.可怜的小猪.swift"; sourceTree = "<group>"; };
		89B0B689276A2D0000A10203 /* 851.喧闹和富有.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "851.喧闹和富有.swift"; sourceTree = "<group>"; };
		89B0B68B276A2D9100A10203 /* 851.喧闹和富有.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "851.喧闹和富有.cpp"; sourceTree = "<group>"; };
		89B2F93227245D2800DB5B34 /* 99.恢复二叉搜索树.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "99.恢复二叉搜索树.cpp"; sourceTree = "<group>"; };
		89B2F9342724609D00DB5B34 /* 101.对称二叉树.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "101.对称二叉树.cpp"; sourceTree = "<group>"; };
		89B2F9362724625600DB5B34 /* 104.二叉树的最大深度.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "104.二叉树的最大深度.cpp"; sourceTree = "<group>"; };
		89B2F938272462D200DB5B34 /* 5.最长回文子串.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "5.最长回文子串.cpp"; sourceTree = "<group>"; };
		89B2F93A272463BF00DB5B34 /* 108.将有序数组转换为二叉搜索树.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "108.将有序数组转换为二叉搜索树.cpp"; sourceTree = "<group>"; };
		89B2F93C272464FA00DB5B34 /* 110.平衡二叉树.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "110.平衡二叉树.cpp"; sourceTree = "<group>"; };
		89B2F93E272465DE00DB5B34 /* 124.二叉树中的最大路径和.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "124.二叉树中的最大路径和.cpp"; sourceTree = "<group>"; };
		89B2F9402724668C00DB5B34 /* 2.两数相加.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "2.两数相加.cpp"; sourceTree = "<group>"; };
		89B2F942272467A600DB5B34 /* 4.寻找两个正序数组的中位数.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "4.寻找两个正序数组的中位数.cpp"; sourceTree = "<group>"; };
		89B2F9442724690000DB5B34 /* 6.z-字形变换.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "6.z-字形变换.cpp"; sourceTree = "<group>"; };
		89B2F947272469E200DB5B34 /* 7.整数反转.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "7.整数反转.cpp"; sourceTree = "<group>"; };
		89B2F9492724F63D00DB5B34 /* 8.字符串转换整数-atoi.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "8.字符串转换整数-atoi.cpp"; sourceTree = "<group>"; };
		89B2F94B2724F71400DB5B34 /* 9.回文数.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "9.回文数.cpp"; sourceTree = "<group>"; };
		89B2F94D2724F7A300DB5B34 /* 11.盛最多水的容器.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "11.盛最多水的容器.cpp"; sourceTree = "<group>"; };
		89B2F94F2724F89F00DB5B34 /* 20.有效的括号.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "20.有效的括号.cpp"; sourceTree = "<group>"; };
		89B2F9512724F96300DB5B34 /* 21.合并两个有序链表.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "21.合并两个有序链表.cpp"; sourceTree = "<group>"; };
		89B2F9532724FA1900DB5B34 /* 23.合并k个升序链表.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "23.合并k个升序链表.cpp"; sourceTree = "<group>"; };
		89B2F9552724FE5700DB5B34 /* 88.合并两个有序数组.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "88.合并两个有序数组.cpp"; sourceTree = "<group>"; };
		89B2F9572724FF5D00DB5B34 /* 150.逆波兰表达式求值.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "150.逆波兰表达式求值.cpp"; sourceTree = "<group>"; };
		89B2F9592725000300DB5B34 /* 198.打家劫舍.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "198.打家劫舍.cpp"; sourceTree = "<group>"; };
		89B2F95B2725009100DB5B34 /* 203.移除链表元素.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "203.移除链表元素.cpp"; sourceTree = "<group>"; };
		89B2F95D2725015D00DB5B34 /* 206.反转链表.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "206.反转链表.cpp"; sourceTree = "<group>"; };
		89B2F95F272501EF00DB5B34 /* 215.数组中的第k个最大元素.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "215.数组中的第k个最大元素.cpp"; sourceTree = "<group>"; };
		89B2F9612725027500DB5B34 /* 224.基本计算器.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "224.基本计算器.cpp"; sourceTree = "<group>"; };
		89B2F9632725030000DB5B34 /* 237.删除链表中的节点.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "237.删除链表中的节点.cpp"; sourceTree = "<group>"; };
		89B2F965272503E600DB5B34 /* 347.前-k-个高频元素.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "347.前-k-个高频元素.cpp"; sourceTree = "<group>"; };
		89B2F9672725047900DB5B34 /* 349.两个数组的交集.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "349.两个数组的交集.cpp"; sourceTree = "<group>"; };
		89B2F969272504F400DB5B34 /* 451.根据字符出现频率排序.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "451.根据字符出现频率排序.cpp"; sourceTree = "<group>"; };
		89B2F96B272505AB00DB5B34 /* 856.括号的分数.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "856.括号的分数.cpp"; sourceTree = "<group>"; };
		89B2F96D2725068200DB5B34 /* 173.二叉搜索树迭代器.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "173.二叉搜索树迭代器.cpp"; sourceTree = "<group>"; };
		89B2F96F2725079900DB5B34 /* 235.二叉搜索树的最近公共祖先.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "235.二叉搜索树的最近公共祖先.cpp"; sourceTree = "<group>"; };
		89B2F971272508A900DB5B34 /* 530.二叉搜索树的最小绝对差.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "530.二叉搜索树的最小绝对差.cpp"; sourceTree = "<group>"; };
		89B2F9732725094000DB5B34 /* 783.二叉搜索树节点最小距离.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "783.二叉搜索树节点最小距离.cpp"; sourceTree = "<group>"; };
		89B2F975272509C400DB5B34 /* 889.根据前序和后序遍历构造二叉树.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "889.根据前序和后序遍历构造二叉树.cpp"; sourceTree = "<group>"; };
		89B2F97727250A8C00DB5B34 /* 938.二叉搜索树的范围和.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "938.二叉搜索树的范围和.cpp"; sourceTree = "<group>"; };
		89B486202787431800A6930A /* 71.简化路径.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "71.简化路径.swift"; sourceTree = "<group>"; };
		89B486222787432000A6930A /* 71.简化路径.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "71.简化路径.cpp"; sourceTree = "<group>"; };
		89B48624278883B500A6930A /* 1614.括号的最大嵌套深度.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "1614.括号的最大嵌套深度.swift"; sourceTree = "<group>"; };
		89B48626278883BE00A6930A /* 1614.括号的最大嵌套深度.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1614.括号的最大嵌套深度.cpp"; sourceTree = "<group>"; };
		89B486282789DEA100A6930A /* 89.格雷编码.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "89.格雷编码.cpp"; sourceTree = "<group>"; };
		89B4862A2789DF0200A6930A /* 89.格雷编码.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "89.格雷编码.swift"; sourceTree = "<group>"; };
		89B4862C278A9E8B00A6930A /* 1629.按键持续时间最长的键.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "1629.按键持续时间最长的键.swift"; sourceTree = "<group>"; };
		89B4862E278A9EA000A6930A /* 1629.按键持续时间最长的键.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1629.按键持续时间最长的键.cpp"; sourceTree = "<group>"; };
		89B48630278C8D3200A6930A /* 306.累加数.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "306.累加数.cpp"; sourceTree = "<group>"; };
		89B48632278C8D3900A6930A /* 306.累加数.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "306.累加数.swift"; sourceTree = "<group>"; };
		89B48634278F2B9E00A6930A /* 1036.逃离大迷宫.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1036.逃离大迷宫.cpp"; sourceTree = "<group>"; };
		89B48635278F2B9E00A6930A /* 334.递增的三元子序列.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "334.递增的三元子序列.cpp"; sourceTree = "<group>"; };
		89B48639278F2BE600A6930A /* 1036.逃离大迷宫.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "1036.逃离大迷宫.swift"; sourceTree = "<group>"; };
		89B4863A278F2BE600A6930A /* 334.递增的三元子序列.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "334.递增的三元子序列.swift"; sourceTree = "<group>"; };
		89B4863E27907D5200A6930A /* 747.至少是其他数字两倍的最大数.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "747.至少是其他数字两倍的最大数.swift"; sourceTree = "<group>"; };
		89B4864027907D7900A6930A /* 747.至少是其他数字两倍的最大数.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "747.至少是其他数字两倍的最大数.cpp"; sourceTree = "<group>"; };
		89B69A182765FEEC004A2892 /* 709.转换成小写字母.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "709.转换成小写字母.swift"; sourceTree = "<group>"; };
		89B69A1A2765FF43004A2892 /* 709.转换成小写字母.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "709.转换成小写字母.cpp"; sourceTree = "<group>"; };
		89B6C492278056D2000F2DA5 /* 2022.将一维数组转变成二维数组.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "2022.将一维数组转变成二维数组.cpp"; sourceTree = "<group>"; };
		89B6C494278056DE000F2DA5 /* 2022.将一维数组转变成二维数组.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "2022.将一维数组转变成二维数组.swift"; sourceTree = "<group>"; };
		89BA3E9226E50245000B8F69 /* 1143.最长公共子序列.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1143.最长公共子序列.cpp"; sourceTree = "<group>"; };
		89C3FC0A26CAAED900C87257 /* 222.完全二叉树的节点个数.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "222.完全二叉树的节点个数.cpp"; sourceTree = "<group>"; };
		89C3FC0C26CAB26D00C87257 /* 236.二叉树的最近公共祖先.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "236.二叉树的最近公共祖先.cpp"; sourceTree = "<group>"; };
		89C3FC0E26CAB69A00C87257 /* 94.二叉树的中序遍历.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "94.二叉树的中序遍历.cpp"; sourceTree = "<group>"; };
		89C3FC1126CE988000C87257 /* UnionFind.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = UnionFind.cpp; sourceTree = "<group>"; };
		89C3FC1226CE988000C87257 /* UnionFind.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = UnionFind.h; sourceTree = "<group>"; };
		89C3FC1426CE9CF600C87257 /* 130.被围绕的区域.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "130.被围绕的区域.cpp"; sourceTree = "<group>"; };
		89C3FC1626CEA34000C87257 /* 990.等式方程的可满足性.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "990.等式方程的可满足性.cpp"; sourceTree = "<group>"; };
		89C3FC1926CEA5FC00C87257 /* 146.lru-缓存机制.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "146.lru-缓存机制.cpp"; sourceTree = "<group>"; };
		89C3FC1C26CFEA6300C87257 /* 895.最大频率栈.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "895.最大频率栈.cpp"; sourceTree = "<group>"; };
		89C3FC1E26CFEF1100C87257 /* 295.数据流的中位数.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "295.数据流的中位数.cpp"; sourceTree = "<group>"; };
		89C3FC2026CFF19D00C87257 /* 496.下一个更大元素-i.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "496.下一个更大元素-i.cpp"; sourceTree = "<group>"; };
		89C3FC2226CFF41300C87257 /* 503.下一个更大元素-ii.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "503.下一个更大元素-ii.cpp"; sourceTree = "<group>"; };
		89C3FC2426CFF58700C87257 /* 739.每日温度.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "739.每日温度.cpp"; sourceTree = "<group>"; };
		89C3FC2626CFF74E00C87257 /* 239.滑动窗口最大值.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "239.滑动窗口最大值.cpp"; sourceTree = "<group>"; };
		89C3FC2826CFFA1C00C87257 /* 225.用队列实现栈.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "225.用队列实现栈.cpp"; sourceTree = "<group>"; };
		89C3FC2A26CFFB8200C87257 /* 232.用栈实现队列.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "232.用栈实现队列.cpp"; sourceTree = "<group>"; };
		89C3FC2D26D0004700C87257 /* 870.优势洗牌.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "870.优势洗牌.cpp"; sourceTree = "<group>"; };
		89C3FC2F26D0C3B800C87257 /* 704.二分查找.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "704.二分查找.cpp"; sourceTree = "<group>"; };
		89C3FC3126D0CBD400C87257 /* 34.在排序数组中查找元素的第一个和最后一个位置.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "34.在排序数组中查找元素的第一个和最后一个位置.cpp"; sourceTree = "<group>"; };
		89C3FC3326D0EA7700C87257 /* 875.爱吃香蕉的珂珂.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "875.爱吃香蕉的珂珂.cpp"; sourceTree = "<group>"; };
		89C3FC3526D0F95300C87257 /* 1011.在-d-天内送达包裹的能力.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1011.在-d-天内送达包裹的能力.cpp"; sourceTree = "<group>"; };
		89C3FC3726D0FCD600C87257 /* 410.分割数组的最大值.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "410.分割数组的最大值.cpp"; sourceTree = "<group>"; };
		89C3FC3926D100D300C87257 /* 141.环形链表.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "141.环形链表.cpp"; sourceTree = "<group>"; };
		89C3FC3C26D1046900C87257 /* 142.环形链表-ii.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "142.环形链表-ii.cpp"; sourceTree = "<group>"; };
		89C3FC3E26D1062600C87257 /* 167.两数之和-ii-输入有序数组.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "167.两数之和-ii-输入有序数组.cpp"; sourceTree = "<group>"; };
		89C3FC4026D1077D00C87257 /* 344.反转字符串.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "344.反转字符串.cpp"; sourceTree = "<group>"; };
		89C3FC4226D1093F00C87257 /* 19.删除链表的倒数第-n-个结点.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "19.删除链表的倒数第-n-个结点.cpp"; sourceTree = "<group>"; };
		89C3FC4426D10D9A00C87257 /* 876.链表的中间结点.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "876.链表的中间结点.cpp"; sourceTree = "<group>"; };
		89C3FC4626D1508800C87257 /* 76.最小覆盖子串.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "76.最小覆盖子串.cpp"; sourceTree = "<group>"; };
		89C3FC4926D1EB1300C87257 /* 冒泡排序.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "冒泡排序.cpp"; sourceTree = "<group>"; };
		89C3FC4C26D1ED8600C87257 /* sorts.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = sorts.swift; sourceTree = "<group>"; };
		89C3FC4F26D1EF4C00C87257 /* 5850.找出数组的最大公约数.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5850.找出数组的最大公约数.cpp"; sourceTree = "<group>"; };
		89C3FC5126D1F1AD00C87257 /* 5851.找出不同的二进制字符串.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5851.找出不同的二进制字符串.cpp"; sourceTree = "<group>"; };
		89C3FC5326D1F64B00C87257 /* 5852.最小化目标值与所选元素的差.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5852.最小化目标值与所选元素的差.cpp"; sourceTree = "<group>"; };
		89C3FC5526D1F83100C87257 /* 5853.从子集的和还原数组.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5853.从子集的和还原数组.cpp"; sourceTree = "<group>"; };
		89C84271274A057800A73FAB /* 559.n-叉树的最大深度.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "559.n-叉树的最大深度.cpp"; sourceTree = "<group>"; };
		89C84273274A081700A73FAB /* 559.n-叉树的最大深度.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "559.n-叉树的最大深度.swift"; sourceTree = "<group>"; };
		89C84275274A09F400A73FAB /* Node.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Node.swift; sourceTree = "<group>"; };
		89CC848326BF79A1009483EF /* 5838.检查字符串是否为数组前缀.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5838.检查字符串是否为数组前缀.cpp"; sourceTree = "<group>"; };
		89CC848626BF7C6D009483EF /* 5839.移除石子使总数最小.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5839.移除石子使总数最小.cpp"; sourceTree = "<group>"; };
		89CC848826BF7E3B009483EF /* 5840.使字符串平衡的最小交换次数.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5840.使字符串平衡的最小交换次数.cpp"; sourceTree = "<group>"; };
		89CC848A26BF8125009483EF /* 5841.找出到每个位置为止最长的有效障碍赛跑路线.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5841.找出到每个位置为止最长的有效障碍赛跑路线.cpp"; sourceTree = "<group>"; };
		89CC849026C17453009483EF /* 70.爬楼梯.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "70.爬楼梯.cpp"; sourceTree = "<group>"; };
		89CC849326C174BE009483EF /* 5381_你可以工作的最大周数.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5381_你可以工作的最大周数.cpp"; sourceTree = "<group>"; };
		89CC849426C174BE009483EF /* 5830_三除数.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5830_三除数.cpp"; sourceTree = "<group>"; };
		89CC849526C174BE009483EF /* 5187_收集足够苹果的最小花园周长.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5187_收集足够苹果的最小花园周长.cpp"; sourceTree = "<group>"; };
		89CC849726C17562009483EF /* 654.最大二叉树.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "654.最大二叉树.cpp"; sourceTree = "<group>"; };
		89CC849926C1759A009483EF /* TreeNode.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = TreeNode.cpp; sourceTree = "<group>"; };
		89CC849A26C1759A009483EF /* TreeNode.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = TreeNode.h; sourceTree = "<group>"; };
		89CC849C26C17792009483EF /* 652.寻找重复的子树.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "652.寻找重复的子树.cpp"; sourceTree = "<group>"; };
		89CC849E26C17AEC009483EF /* 226.翻转二叉树.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "226.翻转二叉树.cpp"; sourceTree = "<group>"; };
		89CC84A026C17C76009483EF /* 116.填充每个节点的下一个右侧节点指针.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "116.填充每个节点的下一个右侧节点指针.cpp"; sourceTree = "<group>"; };
		89CC84A226C17EB2009483EF /* 114.二叉树展开为链表.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "114.二叉树展开为链表.cpp"; sourceTree = "<group>"; };
		89CC84A426C18174009483EF /* 105.从前序与中序遍历序列构造二叉树.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "105.从前序与中序遍历序列构造二叉树.cpp"; sourceTree = "<group>"; };
		89CC84A626C1843D009483EF /* 106.从中序与后序遍历序列构造二叉树.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "106.从中序与后序遍历序列构造二叉树.cpp"; sourceTree = "<group>"; };
		89CC84A926C2C3C5009483EF /* 98.验证二叉搜索树.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "98.验证二叉搜索树.cpp"; sourceTree = "<group>"; };
		89CC84AB26C2C692009483EF /* 230.二叉搜索树中第k小的元素.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "230.二叉搜索树中第k小的元素.cpp"; sourceTree = "<group>"; };
		89CC84AD26C2C94A009483EF /* 450.删除二叉搜索树中的节点.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "450.删除二叉搜索树中的节点.cpp"; sourceTree = "<group>"; };
		89CC84AF26C2D19B009483EF /* 538.把二叉搜索树转换为累加树.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "538.把二叉搜索树转换为累加树.cpp"; sourceTree = "<group>"; };
		89CC84B126C2D2C8009483EF /* 700.二叉搜索树中的搜索.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "700.二叉搜索树中的搜索.cpp"; sourceTree = "<group>"; };
		89CC84B326C2D3BF009483EF /* 701.二叉搜索树中的插入操作.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "701.二叉搜索树中的插入操作.cpp"; sourceTree = "<group>"; };
		89CC84B526C2D493009483EF /* 1038.把二叉搜索树转换为累加树.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1038.把二叉搜索树转换为累加树.cpp"; sourceTree = "<group>"; };
		89CC84B726C41A72009483EF /* 95.不同的二叉搜索树-ii.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "95.不同的二叉搜索树-ii.cpp"; sourceTree = "<group>"; };
		89CC84B926C41BF2009483EF /* 96.不同的二叉搜索树.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "96.不同的二叉搜索树.cpp"; sourceTree = "<group>"; };
		89CC84BB26C42537009483EF /* 797.所有可能的路径.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "797.所有可能的路径.cpp"; sourceTree = "<group>"; };
		89CC84BD26C427C8009483EF /* 1373.二叉搜索子树的最大键值和.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1373.二叉搜索子树的最大键值和.cpp"; sourceTree = "<group>"; };
		89CC84C026C8B46F009483EF /* 5843.作为子字符串出现在单词中的字符串数目.cpp */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.cpp.cpp; path = "5843.作为子字符串出现在单词中的字符串数目.cpp"; sourceTree = "<group>"; };
		89CEC83126FCC815000F9EC7 /* 326.3-的幂.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "326.3-的幂.cpp"; sourceTree = "<group>"; };
		89CEC83326FD805F000F9EC7 /* 430.扁平化多级双向链表.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "430.扁平化多级双向链表.cpp"; sourceTree = "<group>"; };
		89CF0C9C271BB4A3002CFCED /* 102.二叉树的层序遍历.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "102.二叉树的层序遍历.cpp"; sourceTree = "<group>"; };
		89CF0C9E271BB67A002CFCED /* 144.二叉树的前序遍历.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "144.二叉树的前序遍历.cpp"; sourceTree = "<group>"; };
		89CF0CA0271BB7D7002CFCED /* 145.二叉树的后序遍历.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "145.二叉树的后序遍历.cpp"; sourceTree = "<group>"; };
		89CF305326ECFAD90029D7B6 /* 600.不含连续-1-的非负整数.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "600.不含连续-1-的非负整数.cpp"; sourceTree = "<group>"; };
		89CF305526EE51560029D7B6 /* 678.有效的括号字符串.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "678.有效的括号字符串.cpp"; sourceTree = "<group>"; };
		89D44118277823E0006B0055 /* 1078.bigram-分词.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "1078.bigram-分词.swift"; sourceTree = "<group>"; };
		89D4411A277823F9006B0055 /* 1078.bigram-分词.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1078.bigram-分词.cpp"; sourceTree = "<group>"; };
		89D65EC927678B8600B855E3 /* 807.保持城市天际线.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "807.保持城市天际线.swift"; sourceTree = "<group>"; };
		89D65ECB27678B9500B855E3 /* 807.保持城市天际线.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "807.保持城市天际线.cpp"; sourceTree = "<group>"; };
		89D65EDE2768D73B00B855E3 /* 630.课程表-iii.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "630.课程表-iii.swift"; sourceTree = "<group>"; };
		89D65EE02768D97200B855E3 /* PriorityQueue.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = PriorityQueue.swift; sourceTree = "<group>"; };
		89D65EE22768D99A00B855E3 /* 630.课程表-iii.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "630.课程表-iii.cpp"; sourceTree = "<group>"; };
		89DE25C126F8D411005999E0 /* 673.最长递增子序列的个数.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "673.最长递增子序列的个数.cpp"; sourceTree = "<group>"; };
		89DEB28B26EF9355009A4894 /* 447.回旋镖的数量.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "447.回旋镖的数量.cpp"; sourceTree = "<group>"; };
		89DEB28D26F0ED37009A4894 /* 524.通过删除字母匹配到字典里最长单词.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "524.通过删除字母匹配到字典里最长单词.cpp"; sourceTree = "<group>"; };
		89DEB29026F248FC009A4894 /* 162.寻找峰值.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "162.寻找峰值.cpp"; sourceTree = "<group>"; };
		89DEB29226F363EB009A4894 /* 212.单词搜索-ii.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "212.单词搜索-ii.cpp"; sourceTree = "<group>"; };
		89E391E4276CD8DE0049A907 /* 1518.换酒问题.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "1518.换酒问题.swift"; sourceTree = "<group>"; };
		89E391E6276CD90B0049A907 /* 1518.换酒问题.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1518.换酒问题.cpp"; sourceTree = "<group>"; };
		89E5AAC727493969007DB9B9 /* 594.最长和谐子序列.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "594.最长和谐子序列.cpp"; sourceTree = "<group>"; };
		89E5AAC927493A7E007DB9B9 /* 594.最长和谐子序列.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "594.最长和谐子序列.swift"; sourceTree = "<group>"; };
		89EBA18126C965F700D291DD /* 341.扁平化嵌套列表迭代器.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "341.扁平化嵌套列表迭代器.cpp"; sourceTree = "<group>"; };
		89EEFF6F26C95BF90010CFA7 /* 297.二叉树的序列化与反序列化.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "297.二叉树的序列化与反序列化.cpp"; sourceTree = "<group>"; };
		89F7B9932784951C000326DC /* 913.猫和老鼠.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "913.猫和老鼠.cpp"; sourceTree = "<group>"; };
		89F7B9952785DAB7000326DC /* 1576.替换所有的问号.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "1576.替换所有的问号.cpp"; sourceTree = "<group>"; };
		89F7B9972785DAC1000326DC /* 1576.替换所有的问号.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "1576.替换所有的问号.swift"; sourceTree = "<group>"; };
		89F7BA2A2753D1570075865E /* 438.找到字符串中所有字母异位词.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "438.找到字符串中所有字母异位词.swift"; sourceTree = "<group>"; };
		89FA69B6273EC3D0005D1B5D /* 375.猜数字大小-ii.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "375.猜数字大小-ii.cpp"; sourceTree = "<group>"; };
		89FA69B8273EC786005D1B5D /* 375.猜数字大小-ii.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "375.猜数字大小-ii.swift"; sourceTree = "<group>"; };
		89FDB49B27250CBA00E77C54 /* 638.大礼包.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "638.大礼包.cpp"; sourceTree = "<group>"; };
		89FE578626F4EEC700863E33 /* 36.有效的数独.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "36.有效的数独.cpp"; sourceTree = "<group>"; };
		89FFD6682704A1A800AD1B8D /* 517.超级洗衣机.cpp */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.cpp.cpp; path = "517.超级洗衣机.cpp"; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		89554F9726BEDE7100FEDFF1 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		89A6BEFC26BD8182007BDF6B /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		8907625926D54CCB00A93668 /* 额外的算法题 */ = {
			isa = PBXGroup;
			children = (
				8907625A26D54CEB00A93668 /* Google_1.cpp */,
				8907627926E26FF200A93668 /* 面试题17.14.最小K个数.cpp */,
			);
			name = "额外的算法题";
			sourceTree = "<group>";
		};
		8907625F26DB28EC00A93668 /* 第256场 */ = {
			isa = PBXGroup;
			children = (
				8907626026DB28FE00A93668 /* 5854.学生分数的最小差值.cpp */,
				8907626226DB2AE800A93668 /* 5855.找出数组中的第K大整数.cpp */,
				8907626426DB2EDC00A93668 /* 5856.完成任务的最少工作时间段.cpp */,
				8907626626DB31FE00A93668 /* 5857.不同的好子序列数目.cpp */,
			);
			name = "第256场";
			sourceTree = "<group>";
		};
		8907627D26E4636300A93668 /* 第257场 */ = {
			isa = PBXGroup;
			children = (
				8907627E26E4638500A93668 /* 5863.统计特殊四元组.cpp */,
				8907628026E469B700A93668 /* 5864.游戏中弱角色的数量.cpp */,
				8907628226E46F0F00A93668 /* 5865.访问完所有房间的第一天.cpp */,
				8907628426E474D100A93668 /* 5866.数组的最大公因数排序.cpp */,
			);
			name = "第257场";
			sourceTree = "<group>";
		};
		89239D152718596700489E2B /* 剑指offer II */ = {
			isa = PBXGroup;
			children = (
				89239D16271859C000489E2B /* 剑指 Offer II 069.山峰数组的顶部.cpp */,
			);
			name = "剑指offer II";
			sourceTree = "<group>";
		};
		89554F8A26BECF7C00FEDFF1 /* 链表 */ = {
			isa = PBXGroup;
			children = (
				89554F8026BD844100FEDFF1 /* ListNode.h */,
				89554F8226BD848F00FEDFF1 /* ListNode.cpp */,
			);
			name = "链表";
			sourceTree = "<group>";
		};
		89554FA126BEDED300FEDFF1 /* Swift */ = {
			isa = PBXGroup;
			children = (
				89886F54272CDE00003A626D /* 20.有效的括号.swift */,
				89886F64272CE221003A626D /* 21.合并两个有序链表.swift */,
				89886F67272CE4B9003A626D /* 23.合并k个升序链表.swift */,
				89886F49272C5E42003A626D /* 36.有效的数独.swift */,
				89B486202787431800A6930A /* 71.简化路径.swift */,
				89886F4F272CDC20003A626D /* 88.合并两个有序数组.swift */,
				89B4862A2789DF0200A6930A /* 89.格雷编码.swift */,
				89886F56272CDF2D003A626D /* 150.逆波兰表达式求值.swift */,
				893E1231272C51AD00EAC6FD /* 198.打家劫舍.swift */,
				893E1234272C554D00EAC6FD /* 215.数组中的第k个最大元素.swift */,
				89886F58272CDFA2003A626D /* 224.基本计算器.swift */,
				89886F5B272CE03E003A626D /* 225.用队列实现栈.swift */,
				89886F5D272CE104003A626D /* 232.用栈实现队列.swift */,
				891095852731767C00981C0D /* 237.删除链表中的节点.swift */,
				89886F6B272CF392003A626D /* 260.只出现一次的数字-iii.swift */,
				890126E92736395600440D63 /* 268.丢失的数字.swift */,
				899EF52727395E5700CCB02F /* 299.猜数字游戏.swift */,
				89B48632278C8D3900A6930A /* 306.累加数.swift */,
				899A76D32747F703006DA530 /* 318.最大单词长度乘积-2.swift */,
				899A76CF2747F6E2006DA530 /* 319.灯泡开关.swift */,
				89554FA226BEDED300FEDFF1 /* 322.零钱兑换.swift */,
				89B4863A278F2BE600A6930A /* 334.递增的三元子序列.swift */,
				89886F45272C5A7E003A626D /* 347.前-k-个高频元素.swift */,
				89886F4C272C5EF5003A626D /* 349.两个数组的交集.swift */,
				8910958B27342C7B00981C0D /* 367.有效的完全平方数.swift */,
				892EC6A2275C994D00CD0593 /* 372.超级次方.swift */,
				896BABCA2791C9CD0099C360 /* 373.查找和最小的k对数字.swift */,
				89FA69B8273EC786005D1B5D /* 375.猜数字大小-ii.swift */,
				8992BF50275B2675007E107F /* 383.赎金信.swift */,
				89AE78A52751E7D600598666 /* 384.打乱数组.swift */,
				898F4E6B27815C3E00A89BD8 /* 390.消除游戏.swift */,
				899A76D12747F6F6006DA530 /* 391.完美矩形-1.swift */,
				899A76D92747F753006DA530 /* 397.整数替换.swift */,
				89723784275A656900EBC5C5 /* 400.第-n-位数字.swift */,
				89A779EA276DD35B00B7CDA9 /* 419.甲板上的战舰.swift */,
				89AE78A62751E7D600598666 /* 423.从英文中重建数字.swift */,
				89F7BA2A2753D1570075865E /* 438.找到字符串中所有字母异位词.swift */,
				89886F47272C5DA1003A626D /* 451.根据字符出现频率排序.swift */,
				89AE78A72751E7D600598666 /* 458.可怜的小猪.swift */,
				8939CD84277F59A0009F0CEE /* 472.连接词.swift */,
				897355192776209C0034C87A /* 475.供暖器.swift */,
				8976631B273C1B2600507E1F /* 495.提莫攻击.swift */,
				89886F6F272EC8B2003A626D /* 500.键盘行.swift */,
				89723783275A656800EBC5C5 /* 506.相对名次.swift */,
				8939CD7C277F587E009F0CEE /* 507.完美数.swift */,
				89886F51272CDCE6003A626D /* 509.斐波那契数.swift */,
				89AE789B2751CDF000598666 /* 519.随机翻转矩阵.swift */,
				891C5A62273F718D0047E46E /* 520.检测大写字母.swift */,
				89C84273274A081700A73FAB /* 559.n-叉树的最大深度.swift */,
				899A76D52747F710006DA530 /* 563.二叉树的坡度-2.swift */,
				8995D89C27303094001A499C /* 575.分糖果.swift */,
				89E5AAC927493A7E007DB9B9 /* 594.最长和谐子序列.swift */,
				898F44A42737DBDC0051A08C /* 598.范围求和-ii.swift */,
				89766320273D6A5600507E1F /* 629.k个逆序对数组.swift */,
				89D65EDE2768D73B00B855E3 /* 630.课程表-iii.swift */,
				890E883F2740CB8C0073633B /* 677.键值映射.swift */,
				8973551B2776209C0034C87A /* 686.重复叠加字符串匹配.swift */,
				89943B412760F48C002F1171 /* 689.三个无重叠子数组的最大和.swift */,
				89AE78A32751E7D600598666 /* 700.二叉搜索树中的搜索.swift */,
				89B69A182765FEEC004A2892 /* 709.转换成小写字母.swift */,
				89B4863E27907D5200A6930A /* 747.至少是其他数字两倍的最大数.swift */,
				8988F1E92763997B00CDBAA9 /* 748.最短补全词.swift */,
				89723785275A656900EBC5C5 /* 786.第-k-个最小的素数分数.swift */,
				892396DF27624BBD0041A3B9 /* 794.有效的井字游戏.swift */,
				89D65EC927678B8600B855E3 /* 807.保持城市天际线.swift */,
				8939CD86277F59A0009F0CEE /* 825.适龄的朋友.swift */,
				8939CD83277F59A0009F0CEE /* 846.一手顺子.swift */,
				89B0B689276A2D0000A10203 /* 851.喧闹和富有.swift */,
				89886F5F272CE174003A626D /* 856.括号的分数.swift */,
				89AE78A42751E7D600598666 /* 859.亲密字符串.swift */,
				895F9E412764311D00E2DF08 /* 911.在线选举.swift */,
				89075150276EFD7B009BA671 /* 997.找到小镇的法官.swift */,
				89723786275A656900EBC5C5 /* 1005.k-次取反后最大化的数组和.swift */,
				89943B38275FAF80002F1171 /* 1034.边框着色.swift */,
				89B48639278F2BE600A6930A /* 1036.逃离大迷宫.swift */,
				89D44118277823E0006B0055 /* 1078.bigram-分词.swift */,
				897355182776209C0034C87A /* 1154.一年中的第几天.swift */,
				8955A7F42783456F00AB2F8D /* 1185.一周中的第几天.swift */,
				8910958D2735799500981C0D /* 1218.最长定差子序列.swift */,
				8939CD85277F59A0009F0CEE /* 1296.划分数组为连续数字的集合.swift */,
				89723787275A656900EBC5C5 /* 1446.连续字符.swift */,
				89E391E4276CD8DE0049A907 /* 1518.换酒问题.swift */,
				89F7B9972785DAC1000326DC /* 1576.替换所有的问号.swift */,
				8973552327776F7E0034C87A /* 1609.奇偶树.swift */,
				89075154276F674C009BA671 /* 1610.可见点的最大数目.swift */,
				89B48624278883B500A6930A /* 1614.括号的最大嵌套深度.swift */,
				89B4862C278A9E8B00A6930A /* 1629.按键持续时间最长的键.swift */,
				8973551A2776209C0034C87A /* 1705.吃苹果的最大数目.swift */,
				896BABCC2792F1420099C360 /* 1716.计算力扣银行的钱.swift */,
				89A38F0D275E4942007FED61 /* 1816.截断句子.swift */,
				8939CD87277F59A0009F0CEE /* 1995.统计特殊四元组.swift */,
				89B6C494278056DE000F2DA5 /* 2022.将一维数组转变成二维数组.swift */,
				89886F61272CE1FF003A626D /* 链表 */,
				89C3FC4B26D1ED6600C87257 /* 排序 */,
				89554FA326BEDED300FEDFF1 /* main.swift */,
				89C84275274A09F400A73FAB /* Node.swift */,
				89D65EE02768D97200B855E3 /* PriorityQueue.swift */,
				899A76D72747F72E006DA530 /* TreeNode.swift */,
			);
			path = Swift;
			sourceTree = "<group>";
		};
		89886F61272CE1FF003A626D /* 链表 */ = {
			isa = PBXGroup;
			children = (
				89886F62272CE20B003A626D /* ListNode.swift */,
			);
			name = "链表";
			sourceTree = "<group>";
		};
		89A6BF0026BD8182007BDF6B /* Cpp */ = {
			isa = PBXGroup;
			children = (
				89A51CCA26D3F8540013B3F2 /* 1.两数之和.cpp */,
				89B2F9402724668C00DB5B34 /* 2.两数相加.cpp */,
				89A51CB726D3EE9A0013B3F2 /* 3.无重复字符的最长子串.cpp */,
				89B2F942272467A600DB5B34 /* 4.寻找两个正序数组的中位数.cpp */,
				89B2F938272462D200DB5B34 /* 5.最长回文子串.cpp */,
				89B2F9442724690000DB5B34 /* 6.z-字形变换.cpp */,
				89B2F947272469E200DB5B34 /* 7.整数反转.cpp */,
				89B2F9492724F63D00DB5B34 /* 8.字符串转换整数-atoi.cpp */,
				89B2F94B2724F71400DB5B34 /* 9.回文数.cpp */,
				89B2F94D2724F7A300DB5B34 /* 11.盛最多水的容器.cpp */,
				8907627B26E2764A00A93668 /* 15.三数之和.cpp */,
				89C3FC4226D1093F00C87257 /* 19.删除链表的倒数第-n-个结点.cpp */,
				89B2F94F2724F89F00DB5B34 /* 20.有效的括号.cpp */,
				89B2F9512724F96300DB5B34 /* 21.合并两个有序链表.cpp */,
				89B2F9532724FA1900DB5B34 /* 23.合并k个升序链表.cpp */,
				89554F8426BD886800FEDFF1 /* 25.k-个一组翻转链表.cpp */,
				89A51CC126D3F5C40013B3F2 /* 26.删除有序数组中的重复项.cpp */,
				89A51CC526D3F69D0013B3F2 /* 27.移除元素.cpp */,
				89239D0F2715D0D200489E2B /* 29.两数相除.cpp */,
				89C3FC3126D0CBD400C87257 /* 34.在排序数组中查找元素的第一个和最后一个位置.cpp */,
				89FE578626F4EEC700863E33 /* 36.有效的数独.cpp */,
				89239D182719D2E200489E2B /* 38.外观数列.cpp */,
				89782A0E26F98B86000428A0 /* 58.最后一个单词的长度.cpp */,
				8956A90E27242E8E0006474A /* 66.加一-1.cpp */,
				8966DE5C26EA56C800AEA606 /* 68.文本左右对齐.cpp */,
				89CC849026C17453009483EF /* 70.爬楼梯.cpp */,
				89B486222787432000A6930A /* 71.简化路径.cpp */,
				89C3FC4626D1508800C87257 /* 76.最小覆盖子串.cpp */,
				8907625526D5398A00A93668 /* 83.删除排序链表中的重复元素.cpp */,
				89B2F9552724FE5700DB5B34 /* 88.合并两个有序数组.cpp */,
				89B486282789DEA100A6930A /* 89.格雷编码.cpp */,
				89554F7D26BD840B00FEDFF1 /* 92.反转链表-ii.cpp */,
				89C3FC0E26CAB69A00C87257 /* 94.二叉树的中序遍历.cpp */,
				89CC84B726C41A72009483EF /* 95.不同的二叉搜索树-ii.cpp */,
				89CC84B926C41BF2009483EF /* 96.不同的二叉搜索树.cpp */,
				89CC84A926C2C3C5009483EF /* 98.验证二叉搜索树.cpp */,
				89B2F93227245D2800DB5B34 /* 99.恢复二叉搜索树.cpp */,
				89B2F9342724609D00DB5B34 /* 101.对称二叉树.cpp */,
				89CF0C9C271BB4A3002CFCED /* 102.二叉树的层序遍历.cpp */,
				89B2F9362724625600DB5B34 /* 104.二叉树的最大深度.cpp */,
				89CC84A426C18174009483EF /* 105.从前序与中序遍历序列构造二叉树.cpp */,
				89CC84A626C1843D009483EF /* 106.从中序与后序遍历序列构造二叉树.cpp */,
				89B2F93A272463BF00DB5B34 /* 108.将有序数组转换为二叉搜索树.cpp */,
				89B2F93C272464FA00DB5B34 /* 110.平衡二叉树.cpp */,
				89CC84A226C17EB2009483EF /* 114.二叉树展开为链表.cpp */,
				89CC84A026C17C76009483EF /* 116.填充每个节点的下一个右侧节点指针.cpp */,
				8907626C26DE873F00A93668 /* 121.买卖股票的最佳时机.cpp */,
				8907626E26DE87FC00A93668 /* 122.买卖股票的最佳时机-ii.cpp */,
				89B2F93E272465DE00DB5B34 /* 124.二叉树中的最大路径和.cpp */,
				89C3FC1426CE9CF600C87257 /* 130.被围绕的区域.cpp */,
				89C3FC3926D100D300C87257 /* 141.环形链表.cpp */,
				89C3FC3C26D1046900C87257 /* 142.环形链表-ii.cpp */,
				89CF0C9E271BB67A002CFCED /* 144.二叉树的前序遍历.cpp */,
				89CF0CA0271BB7D7002CFCED /* 145.二叉树的后序遍历.cpp */,
				89C3FC1926CEA5FC00C87257 /* 146.lru-缓存机制.cpp */,
				89B2F9572724FF5D00DB5B34 /* 150.逆波兰表达式求值.cpp */,
				89DEB29026F248FC009A4894 /* 162.寻找峰值.cpp */,
				89A484372709E04200EEF031 /* 166.分数到小数.cpp */,
				89C3FC3E26D1062600C87257 /* 167.两数之和-ii-输入有序数组.cpp */,
				89B2F96D2725068200DB5B34 /* 173.二叉搜索树迭代器.cpp */,
				8909E65427107658005ABD25 /* 187.重复的dna序列.cpp */,
				8907627026DE896300A93668 /* 188.买卖股票的最佳时机-iv.cpp */,
				89B2F9592725000300DB5B34 /* 198.打家劫舍.cpp */,
				89B2F95B2725009100DB5B34 /* 203.移除链表元素.cpp */,
				89B2F95D2725015D00DB5B34 /* 206.反转链表.cpp */,
				8956A90C27242E8E0006474A /* 211.添加与搜索单词-数据结构设计-1.cpp */,
				89DEB29226F363EB009A4894 /* 212.单词搜索-ii.cpp */,
				89B2F95F272501EF00DB5B34 /* 215.数组中的第k个最大元素.cpp */,
				89C3FC0A26CAAED900C87257 /* 222.完全二叉树的节点个数.cpp */,
				8983473E270613D800B8946E /* 223.矩形面积.cpp */,
				89B2F9612725027500DB5B34 /* 224.基本计算器.cpp */,
				89C3FC2826CFFA1C00C87257 /* 225.用队列实现栈.cpp */,
				89CC849E26C17AEC009483EF /* 226.翻转二叉树.cpp */,
				8956A90D27242E8E0006474A /* 229.求众数-ii-1.cpp */,
				89CC84AB26C2C692009483EF /* 230.二叉搜索树中第k小的元素.cpp */,
				89C3FC2A26CFFB8200C87257 /* 232.用栈实现队列.cpp */,
				89554F8726BD92EE00FEDFF1 /* 234.回文链表.cpp */,
				89B2F96F2725079900DB5B34 /* 235.二叉搜索树的最近公共祖先.cpp */,
				89C3FC0C26CAB26D00C87257 /* 236.二叉树的最近公共祖先.cpp */,
				89B2F9632725030000DB5B34 /* 237.删除链表中的节点.cpp */,
				89C3FC2626CFF74E00C87257 /* 239.滑动窗口最大值.cpp */,
				893E122A272C3DDA00EAC6FD /* 240.搜索二维矩阵-ii.cpp */,
				89886F69272CE7A7003A626D /* 260.只出现一次的数字-iii.cpp */,
				890126E72736386300440D63 /* 268.丢失的数字.cpp */,
				89AE6F7127146D580013A3FA /* 273.整数转换英文表示.cpp */,
				89239D1A271A6D8F00489E2B /* 282.给表达式添加运算符.cpp */,
				89A51CC726D3F70C0013B3F2 /* 283.移动零.cpp */,
				8951E5DC270CA00000E891F6 /* 284.顶端迭代器.cpp */,
				899FFB8E26F5E33800334BB1 /* 292.nim-游戏.cpp */,
				89C3FC1E26CFEF1100C87257 /* 295.数据流的中位数.cpp */,
				89EEFF6F26C95BF90010CFA7 /* 297.二叉树的序列化与反序列化.cpp */,
				899EF52527395D9500CCB02F /* 299.猜数字游戏.cpp */,
				893E122C272C3DFB00EAC6FD /* 301.删除无效的括号.cpp */,
				89B48630278C8D3200A6930A /* 306.累加数.cpp */,
				8907627226DE898E00A93668 /* 309.最佳买卖股票时机含冷冻期.cpp */,
				89A51CBD26D3F4560013B3F2 /* 316.去除重复字母.cpp */,
				899A76C72747F692006DA530 /* 318.最大单词长度乘积.cpp */,
				899A76C32747F65F006DA530 /* 319.灯泡开关.cpp */,
				89554F8D26BECFC200FEDFF1 /* 322.零钱兑换.cpp */,
				89CEC83126FCC815000F9EC7 /* 326.3-的幂.cpp */,
				89B48635278F2B9E00A6930A /* 334.递增的三元子序列.cpp */,
				893E122E272C4BCC00EAC6FD /* 335.路径交叉.cpp */,
				89EBA18126C965F700D291DD /* 341.扁平化嵌套列表迭代器.cpp */,
				89C3FC4026D1077D00C87257 /* 344.反转字符串.cpp */,
				89B2F965272503E600DB5B34 /* 347.前-k-个高频元素.cpp */,
				89B2F9672725047900DB5B34 /* 349.两个数组的交集.cpp */,
				895522652711D6E300133464 /* 352.将数据流变为多个不相交区间.cpp */,
				89109589273420B400981C0D /* 367.有效的完全平方数.cpp */,
				894792CF27001A7100AC9055 /* 371.两整数之和.cpp */,
				892EC6A0275C993A00CD0593 /* 372.超级次方.cpp */,
				896BABC82791C9A60099C360 /* 373.查找和最小的k对数字.cpp */,
				89FA69B6273EC3D0005D1B5D /* 375.猜数字大小-ii.cpp */,
				89A51CB926D3F29D0013B3F2 /* 380.o-1-时间插入、删除和获取随机元素.cpp */,
				8992BF52275B2693007E107F /* 383.赎金信.cpp */,
				89AE789F2751E79400598666 /* 384.打乱数组.cpp */,
				898F4E6927815B4100A89BD8 /* 390.消除游戏.cpp */,
				899A76C52747F67C006DA530 /* 391.完美矩形.cpp */,
				899A76CC2747F6BD006DA530 /* 397.整数替换.cpp */,
				89723779275A655900EBC5C5 /* 400.第-n-位数字.cpp */,
				891095872734200C00981C0D /* 407.接雨水-ii.cpp */,
				89C3FC3726D0FCD600C87257 /* 410.分割数组的最大值.cpp */,
				89239D112717130400489E2B /* 412.fizz-buzz.cpp */,
				892B78BA270DD01D00923EA9 /* 414.第三大的数.cpp */,
				8902686526BEEDB600156215 /* 416.分割等和子集.cpp */,
				89A779E8276DD2C700B7CDA9 /* 419.甲板上的战舰.cpp */,
				89AE78A02751E7A100598666 /* 423.从英文中重建数字.cpp */,
				89CEC83326FD805F000F9EC7 /* 430.扁平化多级双向链表.cpp */,
				890044A1270E943000EC68D9 /* 434.字符串中的单词数.cpp */,
				8989CF5527034A8A00DB244B /* 437.路径总和-iii.cpp */,
				89A51CB526D3ED250013B3F2 /* 438.找到字符串中所有字母异位词.cpp */,
				89552267271296C200133464 /* 441.排列硬币.cpp */,
				89DEB28B26EF9355009A4894 /* 447.回旋镖的数量.cpp */,
				89CC84AD26C2C94A009483EF /* 450.删除二叉搜索树中的节点.cpp */,
				89B2F969272504F400DB5B34 /* 451.根据字符出现频率排序.cpp */,
				8956A90A27242E8E0006474A /* 453.最小操作次数使数组元素相等-1.cpp */,
				89AE78A12751E7AE00598666 /* 458.可怜的小猪.cpp */,
				8907628726E47A9800A93668 /* 470.用-rand-7-实现-rand-10.cpp */,
				8939CD7E277F5995009F0CEE /* 472.连接词.cpp */,
				89735520277620B20034C87A /* 475.供暖器.cpp */,
				8956A90B27242E8E0006474A /* 476.数字的补数.cpp */,
				890E21FB270AA8E80081372B /* 482.密钥格式化.cpp */,
				89766317273AD13A00507E1F /* 488.祖玛游戏.cpp */,
				8956A90827242C820006474A /* 492.构造矩形.cpp */,
				89766319273C19D500507E1F /* 495.提莫攻击.cpp */,
				89C3FC2026CFF19D00C87257 /* 496.下一个更大元素-i.cpp */,
				89886F6D272EC283003A626D /* 500.键盘行.cpp */,
				8966DE5A26E90CAD00AEA606 /* 502.ipo.cpp */,
				89C3FC2226CFF41300C87257 /* 503.下一个更大元素-ii.cpp */,
				8972377A275A655900EBC5C5 /* 506.相对名次.cpp */,
				8939CD7A277F5733009F0CEE /* 507.完美数.cpp */,
				8907627626DE89EB00A93668 /* 509.斐波那契数.cpp */,
				89FFD6682704A1A800AD1B8D /* 517.超级洗衣机.cpp */,
				89AE789D2751E44700598666 /* 519.随机翻转矩阵.cpp */,
				891C5A60273F6FDB0047E46E /* 520.检测大写字母.cpp */,
				89DEB28D26F0ED37009A4894 /* 524.通过删除字母匹配到字典里最长单词.cpp */,
				89B2F971272508A900DB5B34 /* 530.二叉搜索树的最小绝对差.cpp */,
				89CC84AF26C2D19B009483EF /* 538.把二叉搜索树转换为累加树.cpp */,
				89C84271274A057800A73FAB /* 559.n-叉树的最大深度.cpp */,
				899A76CA2747F6AD006DA530 /* 563.二叉树的坡度.cpp */,
				89A51CB326D3EB980013B3F2 /* 567.字符串的排列.cpp */,
				8957EDB527302F1600A67CCA /* 575.分糖果.cpp */,
				89E5AAC727493969007DB9B9 /* 594.最长和谐子序列.cpp */,
				898F44A22737DAE00051A08C /* 598.范围求和-ii.cpp */,
				89CF305326ECFAD90029D7B6 /* 600.不含连续-1-的非负整数.cpp */,
				8976631E273D698000507E1F /* 629.k个逆序对数组.cpp */,
				89D65EE22768D99A00B855E3 /* 630.课程表-iii.cpp */,
				89FDB49B27250CBA00E77C54 /* 638.大礼包.cpp */,
				898379132701FFD200A1E293 /* 639.解码方法-ii.cpp */,
				8909653A26F77737005E17EA /* 650.只有两个键的键盘.cpp */,
				89CC849C26C17792009483EF /* 652.寻找重复的子树.cpp */,
				89CC849726C17562009483EF /* 654.最大二叉树.cpp */,
				89DE25C126F8D411005999E0 /* 673.最长递增子序列的个数.cpp */,
				890E883D2740C9CB0073633B /* 677.键值映射.cpp */,
				89CF305526EE51560029D7B6 /* 678.有效的括号字符串.cpp */,
				8973551D277620B20034C87A /* 686.重复叠加字符串匹配.cpp */,
				89943B3F2760F480002F1171 /* 689.三个无重叠子数组的最大和.cpp */,
				89CC84B126C2D2C8009483EF /* 700.二叉搜索树中的搜索.cpp */,
				89CC84B326C2D3BF009483EF /* 701.二叉搜索树中的插入操作.cpp */,
				89C3FC2F26D0C3B800C87257 /* 704.二分查找.cpp */,
				89B69A1A2765FF43004A2892 /* 709.转换成小写字母.cpp */,
				89A51CBB26D3F3CE0013B3F2 /* 710.黑名单中的随机数.cpp */,
				8907627426DE89B900A93668 /* 714.买卖股票的最佳时机含手续费.cpp */,
				8919B45D26FAC9B600A9F0C2 /* 725.分隔链表.cpp */,
				89C3FC2426CFF58700C87257 /* 739.每日温度.cpp */,
				89B4864027907D7900A6930A /* 747.至少是其他数字两倍的最大数.cpp */,
				8988F1EB2763999200CDBAA9 /* 748.最短补全词.cpp */,
				89B2F9732725094000DB5B34 /* 783.二叉搜索树节点最小距离.cpp */,
				8972377D275A655900EBC5C5 /* 786.第-k-个最小的素数分数.cpp */,
				892396E127624BD40041A3B9 /* 794.有效的井字游戏.cpp */,
				89CC84BB26C42537009483EF /* 797.所有可能的路径.cpp */,
				89D65ECB27678B9500B855E3 /* 807.保持城市天际线.cpp */,
				8939CD82277F5995009F0CEE /* 825.适龄的朋友.cpp */,
				8939CD81277F5995009F0CEE /* 846.一手顺子.cpp */,
				89B0B68B276A2D9100A10203 /* 851.喧闹和富有.cpp */,
				89B2F96B272505AB00DB5B34 /* 856.括号的分数.cpp */,
				89AE78A22751E7BF00598666 /* 859.亲密字符串.cpp */,
				893E11FD272AEC7300EAC6FD /* 869.重新排序得到-2-的幂.cpp */,
				89C3FC2D26D0004700C87257 /* 870.优势洗牌.cpp */,
				89C3FC3326D0EA7700C87257 /* 875.爱吃香蕉的珂珂.cpp */,
				89C3FC4426D10D9A00C87257 /* 876.链表的中间结点.cpp */,
				89B2F975272509C400DB5B34 /* 889.根据前序和后序遍历构造二叉树.cpp */,
				89C3FC1C26CFEA6300C87257 /* 895.最大频率栈.cpp */,
				895F9E3F2764310C00E2DF08 /* 911.在线选举.cpp */,
				89F7B9932784951C000326DC /* 913.猫和老鼠.cpp */,
				89B2F97727250A8C00DB5B34 /* 938.二叉搜索树的范围和.cpp */,
				89C3FC1626CEA34000C87257 /* 990.等式方程的可满足性.cpp */,
				8907514E276EFCC7009BA671 /* 997.找到小镇的法官.cpp */,
				8972377B275A655900EBC5C5 /* 1005.k-次取反后最大化的数组和.cpp */,
				89C3FC3526D0F95300C87257 /* 1011.在-d-天内送达包裹的能力.cpp */,
				89943B3A275FAF87002F1171 /* 1034.边框着色.cpp */,
				89B48634278F2B9E00A6930A /* 1036.逃离大迷宫.cpp */,
				89CC84B526C2D493009483EF /* 1038.把二叉搜索树转换为累加树.cpp */,
				8973551C277620B20034C87A /* 1044.最长重复子串.cpp */,
				89D4411A277823F9006B0055 /* 1078.bigram-分词.cpp */,
				89A51CBF26D3F5140013B3F2 /* 1081.不同字符的最小子序列.cpp */,
				89BA3E9226E50245000B8F69 /* 1143.最长公共子序列.cpp */,
				8973551F277620B20034C87A /* 1154.一年中的第几天.cpp */,
				8955A7F62783457F00AB2F8D /* 1185.一周中的第几天.cpp */,
				8910958F273579C800981C0D /* 1218.最长定差子序列.cpp */,
				8966DE5826E7BBF400AEA606 /* 1221.分割平衡字符串.cpp */,
				8939CD7F277F5995009F0CEE /* 1296.划分数组为连续数字的集合.cpp */,
				89CC84BD26C427C8009483EF /* 1373.二叉搜索子树的最大键值和.cpp */,
				8969847727072BB30070F99C /* 1436.旅行终点站.cpp */,
				8972377C275A655900EBC5C5 /* 1446.连续字符.cpp */,
				8907625D26D9455F00A93668 /* 1480.一维数组的动态和.cpp */,
				89E391E6276CD90B0049A907 /* 1518.换酒问题.cpp */,
				89F7B9952785DAB7000326DC /* 1576.替换所有的问号.cpp */,
				8973552527776F8C0034C87A /* 1609.奇偶树.cpp */,
				89075152276F673C009BA671 /* 1610.可见点的最大数目.cpp */,
				89B48626278883BE00A6930A /* 1614.括号的最大嵌套深度.cpp */,
				89B4862E278A9EA000A6930A /* 1629.按键持续时间最长的键.cpp */,
				8973551E277620B20034C87A /* 1705.吃苹果的最大数目.cpp */,
				896BABCE2792F15C0099C360 /* 1716.计算力扣银行的钱.cpp */,
				89A38F0F275E4948007FED61 /* 1816.截断句子.cpp */,
				8966DE5E26EBA5E900AEA606 /* 1894.找到需要补充粉笔的学生编号.cpp */,
				8939CD80277F5995009F0CEE /* 1995.统计特殊四元组.cpp */,
				89B6C492278056D2000F2DA5 /* 2022.将一维数组转变成二维数组.cpp */,
				8907625926D54CCB00A93668 /* 额外的算法题 */,
				89CC849626C17557009483EF /* 二叉树 */,
				89239D152718596700489E2B /* 剑指offer II */,
				89554F8A26BECF7C00FEDFF1 /* 链表 */,
				89C3FC4826D1EAE800C87257 /* 排序 */,
				89C3FC1026CE984600C87257 /* 图 */,
				89CC848226BF7976009483EF /* 周赛 */,
				8907625726D53D9B00A93668 /* main.cpp */,
			);
			path = Cpp;
			sourceTree = "<group>";
		};
		89C3FC1026CE984600C87257 /* 图 */ = {
			isa = PBXGroup;
			children = (
				89C3FC1226CE988000C87257 /* UnionFind.h */,
				89C3FC1126CE988000C87257 /* UnionFind.cpp */,
			);
			name = "图";
			sourceTree = "<group>";
		};
		89C3FC4826D1EAE800C87257 /* 排序 */ = {
			isa = PBXGroup;
			children = (
				89C3FC4926D1EB1300C87257 /* 冒泡排序.cpp */,
			);
			name = "排序";
			sourceTree = "<group>";
		};
		89C3FC4B26D1ED6600C87257 /* 排序 */ = {
			isa = PBXGroup;
			children = (
				89C3FC4C26D1ED8600C87257 /* sorts.swift */,
			);
			name = "排序";
			sourceTree = "<group>";
		};
		89C3FC4E26D1EF2E00C87257 /* 第255场 */ = {
			isa = PBXGroup;
			children = (
				89C3FC4F26D1EF4C00C87257 /* 5850.找出数组的最大公约数.cpp */,
				89C3FC5126D1F1AD00C87257 /* 5851.找出不同的二进制字符串.cpp */,
				89C3FC5326D1F64B00C87257 /* 5852.最小化目标值与所选元素的差.cpp */,
				89C3FC5526D1F83100C87257 /* 5853.从子集的和还原数组.cpp */,
			);
			name = "第255场";
			sourceTree = "<group>";
		};
		89CC848226BF7976009483EF /* 周赛 */ = {
			isa = PBXGroup;
			children = (
				8907627D26E4636300A93668 /* 第257场 */,
				8907625F26DB28EC00A93668 /* 第256场 */,
				89C3FC4E26D1EF2E00C87257 /* 第255场 */,
				89CC84BF26C8B443009483EF /* 第254场 */,
				89CC849226C174B1009483EF /* 第252场 */,
				89CC848526BF79AD009483EF /* 第253场 */,
			);
			name = "周赛";
			sourceTree = "<group>";
		};
		89CC848526BF79AD009483EF /* 第253场 */ = {
			isa = PBXGroup;
			children = (
				89CC848326BF79A1009483EF /* 5838.检查字符串是否为数组前缀.cpp */,
				89CC848626BF7C6D009483EF /* 5839.移除石子使总数最小.cpp */,
				89CC848826BF7E3B009483EF /* 5840.使字符串平衡的最小交换次数.cpp */,
				89CC848A26BF8125009483EF /* 5841.找出到每个位置为止最长的有效障碍赛跑路线.cpp */,
			);
			name = "第253场";
			sourceTree = "<group>";
		};
		89CC849226C174B1009483EF /* 第252场 */ = {
			isa = PBXGroup;
			children = (
				89CC849526C174BE009483EF /* 5187_收集足够苹果的最小花园周长.cpp */,
				89CC849326C174BE009483EF /* 5381_你可以工作的最大周数.cpp */,
				89CC849426C174BE009483EF /* 5830_三除数.cpp */,
			);
			name = "第252场";
			sourceTree = "<group>";
		};
		89CC849626C17557009483EF /* 二叉树 */ = {
			isa = PBXGroup;
			children = (
				89CC849A26C1759A009483EF /* TreeNode.h */,
				89CC849926C1759A009483EF /* TreeNode.cpp */,
			);
			name = "二叉树";
			sourceTree = "<group>";
		};
		89CC84BF26C8B443009483EF /* 第254场 */ = {
			isa = PBXGroup;
			children = (
				89CC84C026C8B46F009483EF /* 5843.作为子字符串出现在单词中的字符串数目.cpp */,
				898F272226C8B8EE0077B621 /* 5832.构造元素不等于两相邻元素平均值的数组.cpp */,
				898F272426C8BE780077B621 /* 5844.数组元素的最小非零乘积.cpp */,
				898F272626C8C2B30077B621 /* 5845.你能穿过矩阵的最后一天.cpp */,
			);
			name = "第254场";
			sourceTree = "<group>";
		};
		89F5C9F226B63F3000ABF72F = {
			isa = PBXGroup;
			children = (
				89554FA126BEDED300FEDFF1 /* Swift */,
				89A6BF0026BD8182007BDF6B /* Cpp */,
				89F5C9FC26B63F3000ABF72F /* Products */,
			);
			sourceTree = "<group>";
		};
		89F5C9FC26B63F3000ABF72F /* Products */ = {
			isa = PBXGroup;
			children = (
				89A6BEFF26BD8182007BDF6B /* Cpp */,
				89554F9A26BEDE7100FEDFF1 /* Swift_ */,
			);
			name = Products;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		89554F9926BEDE7100FEDFF1 /* Swift_ */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 89554F9E26BEDE7100FEDFF1 /* Build configuration list for PBXNativeTarget "Swift_" */;
			buildPhases = (
				89554F9626BEDE7100FEDFF1 /* Sources */,
				89554F9726BEDE7100FEDFF1 /* Frameworks */,
				89554F9826BEDE7100FEDFF1 /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Swift_;
			productName = SwiftCode;
			productReference = 89554F9A26BEDE7100FEDFF1 /* Swift_ */;
			productType = "com.apple.product-type.tool";
		};
		89A6BEFE26BD8182007BDF6B /* Cpp */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 89A6BF0526BD8182007BDF6B /* Build configuration list for PBXNativeTarget "Cpp" */;
			buildPhases = (
				89A6BEFB26BD8182007BDF6B /* Sources */,
				89A6BEFC26BD8182007BDF6B /* Frameworks */,
				89A6BEFD26BD8182007BDF6B /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Cpp;
			productName = Cpp;
			productReference = 89A6BEFF26BD8182007BDF6B /* Cpp */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		89F5C9F326B63F3000ABF72F /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftUpdateCheck = 1250;
				LastUpgradeCheck = 1250;
				TargetAttributes = {
					89554F9926BEDE7100FEDFF1 = {
						CreatedOnToolsVersion = 12.5.1;
					};
					89A6BEFE26BD8182007BDF6B = {
						CreatedOnToolsVersion = 12.5.1;
					};
				};
			};
			buildConfigurationList = 89F5C9F626B63F3000ABF72F /* Build configuration list for PBXProject "LeetCode" */;
			compatibilityVersion = "Xcode 9.3";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 89F5C9F226B63F3000ABF72F;
			productRefGroup = 89F5C9FC26B63F3000ABF72F /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				89A6BEFE26BD8182007BDF6B /* Cpp */,
				89554F9926BEDE7100FEDFF1 /* Swift_ */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		89554F9626BEDE7100FEDFF1 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				89886F4B272C5E47003A626D /* main.swift in Sources */,
				896BABCD2792F1420099C360 /* 1716.计算力扣银行的钱.swift in Sources */,
				89C84276274A09F400A73FAB /* Node.swift in Sources */,
				89886F63272CE20B003A626D /* ListNode.swift in Sources */,
				899A76D82747F72E006DA530 /* TreeNode.swift in Sources */,
				89D65EE12768D97200B855E3 /* PriorityQueue.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		89A6BEFB26BD8182007BDF6B /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				89C3FC1326CE988000C87257 /* UnionFind.cpp in Sources */,
				896BABCF2792F15C0099C360 /* 1716.计算力扣银行的钱.cpp in Sources */,
				89CC849B26C1759A009483EF /* TreeNode.cpp in Sources */,
				89554F8326BD848F00FEDFF1 /* ListNode.cpp in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		89554F9F26BEDE7100FEDFF1 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		89554FA026BEDE7100FEDFF1 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_COMPILATION_MODE = wholemodule;
				SWIFT_OPTIMIZATION_LEVEL = "-O";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
		89A6BF0326BD8182007BDF6B /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Debug;
		};
		89A6BF0426BD8182007BDF6B /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Release;
		};
		89F5CA0026B63F3000ABF72F /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 11.3;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
			};
			name = Debug;
		};
		89F5CA0126B63F3000ABF72F /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 11.3;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				SDKROOT = macosx;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		89554F9E26BEDE7100FEDFF1 /* Build configuration list for PBXNativeTarget "Swift_" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				89554F9F26BEDE7100FEDFF1 /* Debug */,
				89554FA026BEDE7100FEDFF1 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		89A6BF0526BD8182007BDF6B /* Build configuration list for PBXNativeTarget "Cpp" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				89A6BF0326BD8182007BDF6B /* Debug */,
				89A6BF0426BD8182007BDF6B /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		89F5C9F626B63F3000ABF72F /* Build configuration list for PBXProject "LeetCode" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				89F5CA0026B63F3000ABF72F /* Debug */,
				89F5CA0126B63F3000ABF72F /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 89F5C9F326B63F3000ABF72F /* Project object */;
}
